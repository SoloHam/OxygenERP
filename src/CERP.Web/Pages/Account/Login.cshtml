@page
@using Volo.Abp.Account.Settings
@using Volo.Abp.Settings
@inherits Volo.Abp.Account.Web.Pages.Account.AccountPage
@model CERP.Web.Pages.Account.CustomLoginModel
@inject Volo.Abp.Settings.ISettingProvider SettingProvider

@{
    ViewData["Title"] = "Log In";
}

<div class="row">
    <img src="~/img/logos/OxygenERP 2.3.png" style="display: block; margin:auto;" alt="" height="50" asp-append-version="true">
</div>

<h1 class="m-t-0 m-b-5 text-center">@ViewData["Title"]</h1>

@if (Model.EnableLocalLogin)
{
    <div class="card m-t-3 shadow-sm rounded">
        <div class="card-body p-t-15">
            @*@if (await SettingProvider.IsTrueAsync(AccountSettingNames.IsSelfRegistrationEnabled))
            {
                <strong>
                    @L["AreYouANewUser"]
                    <a href="@Url.Page("./Register", new {returnUrl = Model.ReturnUrl, returnUrlHash = Model.ReturnUrlHash})" class="text-decoration-none">@L["Register"]</a>
                </strong>
            }*@
            <form method="post" class="m-t-10">
                <input asp-for="ReturnUrl" />
                <input asp-for="ReturnUrlHash" />
                <div class="form-group">
                    <label asp-for="LoginInput.UserNameOrEmailAddress"></label>
                    <input asp-for="LoginInput.UserNameOrEmailAddress" class="form-control" />
                    <span asp-validation-for="LoginInput.UserNameOrEmailAddress" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LoginInput.Password"></label>
                    <input asp-for="LoginInput.Password" class="form-control" />
                    <span asp-validation-for="LoginInput.Password" class="text-danger"></span>
                </div>
                @*<div class="form-check">
                        <label asp-for="LoginInput.RememberMe" class="form-check-label">
                            <input asp-for="LoginInput.RememberMe" class="form-check-input" />
                            @Html.DisplayNa meFor(m => m.LoginInput.RememberMe)
                        </label>
                    </div>*@
                <div class="form-group">
                    <label class="custom-control custom-control-info custom-checkbox active" asp-for="LoginInput.RememberMe">
                        <input class="custom-control-input" style="display:none; visibility:hidden" type="checkbox" visible="false" name="mode" checked="checked" asp-for="LoginInput.RememberMe">
                        <span class="custom-control-indicator"></span>
                        <span class="custom-control-label" style="z-index:-1">@Html.DisplayNameFor(m => m.LoginInput.RememberMe)</span>
                    </label>
                </div>
                <abp-button type="submit" button-type="Primary" name="Action" value="Login" class="btn btn-primary btn-block">@L["Login"]</abp-button>
            </form>
        </div>
    </div>
}

@if (Model.VisibleExternalProviders.Any())
{
    <div class="col-md-6">
        <h4>@L["UseAnotherServiceToLogIn"]</h4>
        <form asp-page="./Login" asp-page-handler="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" asp-route-returnUrlHash="@Model.ReturnUrlHash" method="post">
            <input asp-for="ReturnUrl" />
            <input asp-for="ReturnUrlHash" />
            @foreach (var provider in Model.VisibleExternalProviders)
            {
                <button type="submit" class="btn btn-primary" name="provider" value="@provider.AuthenticationScheme" title="@L["GivenTenantIsNotAvailable", provider.DisplayName]">@provider.DisplayName</button>
            }
        </form>
    </div>
}

@if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
{
    <div class="alert alert-warning">
        <strong>@L["InvalidLoginRequest"]</strong>
        @L["ThereAreNoLoginSchemesConfiguredForThisClient"]
    </div>
}
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
