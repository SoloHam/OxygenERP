@page
@addTagHelper *, Syncfusion.EJ2
@inherits CERP.Web.Pages.CERPPage
@model CERP.Web.Pages.IndexModel
@{
    Layout = "_Layout";
}

<div class="site-content">
    @*<ejs-grid id="TestGrid" allowRowDragAndDrop="true" gridLines="Horizontal" allowSorting="true" height="400" rowDrop="RowDrop" toolbar='new List<object>(){ "Add", "Delete", "Cancel" }'>
        <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
        <e-data-manager url="/api/app/dictionaryValue/getAllCustom" adaptor="WebApiAdaptor"></e-data-manager>
        <e-grid-editsettings allowAdding="true" allowDeleting="true" allowEditing="true" allowEditOnDblClick="true" allowNextRowEdit="true"></e-grid-editsettings>
        <e-grid-columns>
            <e-grid-column width="120" headerText="Id" field="id" visible="false" isPrimaryKey="true"></e-grid-column>
            <e-grid-column width="120" headerText="Code" field="key" allowEditing="false" textAlign="Center"></e-grid-column>
            <e-grid-column width="120" headerText="Name" field="value" validationRules="new { required = true, minLength = 2 }" textAlign="Center"></e-grid-column>
            <e-grid-column width="120" headerText="Local Name" field="valueLocalizationKey" textAlign="Center"></e-grid-column>
            <e-grid-column width="120" headerText="Value Type" field="valueType.valueTypeName" allowEditing="false" textAlign="Center"></e-grid-column>
        </e-grid-columns>

    </ejs-grid>*@

    @*<ejs-grid id="TestGrid" dataSource="@ViewData["DS"]" allowRowDragAndDrop="true" height="400">
        <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
        <e-grid-columns>
            <e-grid-column field="OrderID" headerText="Order ID" textAlign="Right" width="120"></e-grid-column>
            <e-grid-column field="CustomerID" headerText="Customer Name" width="150"></e-grid-column>
            <e-grid-column field="OrderDate" headerText=" Order Date" format="yMd" width="130"></e-grid-column>
            <e-grid-column field="Freight" headerText="Freight" format="C2" width="120"></e-grid-column>
            <e-grid-column field="ShippedDate" headerText="Shipped Date" format="yMd" width="140"></e-grid-column>
            <e-grid-column field="ShipCountry" headerText="Ship Country" width="150"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>*@
</div>
@*@section styles {
    

    <style>
        .e-grid .e-headercell {
            background-color: #f5f5f5;
            /*font-size: 18px;*/
        }

        .site-main {
            background-color: rgb(253,253,253);
        }

        .nav-item {
            background-color: rgb(250,250,250);
            margin-bottom: 8px !important;
            cursor: pointer;
        }

            .nav-item:not(.active) .custom-nav-icon {
                padding-top: 5px;
                color: #787878;
            }

            .nav-item.active .custom-nav-icon {
                font-size: 22px;
                padding-top: 3.5px;
                color: #efefef;
            }

        .nav > li > a {
            font-size: 15px;
            cursor: pointer;
        }

        .nav-pills > li.active > a {
            padding-top: 12.5px;
            font-size: 18px;
            cursor: pointer;
        }
    </style>
}
@section scripts {
    

    
    <script type="text/javascript">
        $(document).ready(function () {
            var grid = $("#TestGrid")[0].ej2_instances[0];
            cERP.appServices.setup.lookup.dictionaryValue.getAllCustom().done(function (data) {
                grid.dataSource = data;
                grid.refresh();
            });
        })
    </script>
}
<script>
    function RowDrop(args) {
        var dropSelectedRowIndex = [];
        let gObj = document.getElementById('TestGrid').ej2_instances[0];
        let seletedRowIndexes = gObj.getSelectedRowIndexes();
        console.log(seletedRowIndexes);
        if (gObj.sortSettings.columns.length > 0) {
            let startedRow = args.rows[0];
            console.log(startedRow);
            let startRowIndex = parseInt(startedRow.getAttribute("aria-rowindex"), 10);          //get the index of selected row 
            console.log(startRowIndex);
            if (!args.target) {
                console.log('ba bye!');
                return;
            }
            let targetRow = args.target.closest('tr');
            let targetRowIndex = targetRow.rowIndex;                                                                       //get the target row index where the row should place 
            console.log('hi!');
            gObj.getContentTable().querySelector('tbody').insertBefore(startedRow, targetRow);
            console.log('hii!');

            if (!ej.base.isNullOrUndefined(targetRow.nextElementSibling)) {
                let currentIndex = targetRow.rowIndex;
                if (currentIndex <= startedRow.rowIndex) {                                                                   // check with selected index and target index 
                    gObj.getContentTable().querySelector('tbody').insertBefore(startedRow, targetRow);
                } else {
                    gObj.getContentTable().querySelector('tbody').insertBefore(startedRow, targetRow.nextElementSibling);
                }
            } else {
                gObj.getContentTable().querySelector('tbody').insertBefore(targetRow, startedRow);
            }

            let startRowObj = gObj.getRowObjectFromUID(startedRow.getAttribute('data-uid'));
            let targetRowObj = gObj.getRowObjectFromUID(targetRow.getAttribute('data-uid'))
            for (let i = 0, len = gObj.currentViewData.length; i < len; i++) {
                let getDataByField = gObj.currentViewData[i];                                                //fetch the selected row using index in grid current view datas 
                if (gObj.sortSettings.columns.length > 0) {
                    sortedCurrentViewData = gObj.currentViewData;
                    sortedCurrentViewData.splice(targetRowIndex, 0, sortedCurrentViewData.splice(startRowIndex, 1)[0]);   // take the target row using splice                             gObj.rowDragAndDropModule.removeBorder(targetRow); 
                    gObj.contentModule.refreshContentRows();
                    dropSelectedRowIndex.push(targetRowIndex);
                    if (gObj.sortSettings.columns.length > 0) {
                        args.cancel = true;
                    }
                    if (dropSelectedRowIndex.length > 0) {
                        gObj.clearSelection();
                        gObj.selectRows(dropSelectedRowIndex);
                    }
                    return;
                }
            }
        }
    }
</script>*@