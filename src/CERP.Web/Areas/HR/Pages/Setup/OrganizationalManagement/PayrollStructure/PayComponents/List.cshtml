@page "/HR/PayrollStructure/PayComponents"
@using CERP.Localization;
@using Microsoft.AspNetCore.Mvc.Localization;
@using CERP.App;
@using CERP;
@using CERP.HR.Setup.OrganizationalManagement.PayrollStructure;
@inject IHtmlLocalizer<CERPResource> L
@inject Volo.Abp.Json.IJsonSerializer JsonSerializer
@using CERP.App.Helpers;
@using Syncfusion.EJ2.Navigations;

@model CERP.Web.Areas.HR.Setup.OrganizationalManagement.PayrollStructure.Pages.PayComponents.ListModel
@{
    ViewData["IsEditing"] = false;
    bool IsEditing = (bool)ViewData["IsEditing"];

    ViewData["Title"] = L["PayComponents"].Value;
    ViewData["IconClass"] = "fas fa-list";
    ViewData["HeaderTitle"] = L["PayComponents"].Value.ToUpper();
    ViewData["SubTitle"] = $"{L["ListOf"]} {L["PayComponents"]}";
    ViewData["Area"] = "Setup";

    ViewData["IsList"] = false;
    ViewData["IsCreate"] = false;
    string cNT = $"{L["Add"].Value} {L["PayComponent"].Value}";
    ViewData["CreateNewText"] = cNT;
    ViewData["CreateNewLink"] = "/PayComponents/PayComponent";

    string TabPlaceholder = (bool)ViewData["IsEditing"] ? L["Area"].Value : L["Step"].Value;

    var alertanimation = new Syncfusion.EJ2.Popups.DialogAnimationSettings { Effect = Syncfusion.EJ2.Popups.DialogEffect.None };

    var initialToolBar = new List<object>() { new { text = "Show Actions", tooltipText = "Actions", prefixIcon = "e-custom-show-actions", id = "showActions" }, "Search", "ColumnChooser" };
    var fullToolBar = new List<object>() { new { text = "Hide Actions", tooltipText = "Actions", prefixIcon = "e-custom-hide-actions", id = "hideActions" }, new { text = "Toggle Grouping", tooltipText = "Grouping", prefixIcon = "zmdi-chevron-up", id = "toggleGrouping" }, new { text = "Audit Trail", tooltipText = "View Audit Trail", prefixIcon = "e-toggleaudittrail", id = "toggleaudittrail" }, new { text = "Toggle Detailed", tooltipText = "Toggle Detailed", prefixIcon = "e-toggledetailed", id = "toggleDetailed" }, new { text = "ExcelExport", tooltipText = "Excel Export", prefixIcon = "e-excelexport", id = "excelexport", align = "Right" }, "CsvExport", "Print", "Search", new { text = "Copy", tooltipText = "Copy", prefixIcon = "e-copy", id = "copy" }, new { text = "Copy With Header", tooltipText = "Copy With Header", prefixIcon = "e-copy", id = "copyHeader" }, "ColumnChooser" };

    List<PS_PayComponentStatus> payComponentStatuses = Enum.GetValues(typeof(PS_PayComponentStatus)).Cast<PS_PayComponentStatus>().ToList();

    List<object> payComponentsCommands = new List<object>();
    payComponentsCommands.Add(new { type = "View", buttonOption = new { iconCss = "e-icons e-search", cssClass = "e-flat" } });
    payComponentsCommands.Add(new { type = "Edit", buttonOption = new { iconCss = "e-icons e-edit", cssClass = "e-flat" } });
    payComponentsCommands.Add(new { type = "Delete", buttonOption = new { iconCss = "e-icons e-delete", cssClass = "e-flat" } });
    payComponentsCommands.Add(new { type = "Cancel", buttonOption = new { iconCss = "e-icons e-cancel-icon", cssClass = "e-flat" } });

    List<object> referenceCommands = new List<object>();
    referenceCommands.Add(new { type = "Delete", buttonOption = new { iconCss = "e-icons e-delete", cssClass = "e-flat" } });
}

@section styles {
    @if ((bool)ViewData["IsEditing"])
    {
        <link href="~/libs/smartwizard/dist/css/smart_wizard_theme_circles.min.css" rel="stylesheet" />
    }

    <style>
        .customContentArea {
            position: unset !important;
        }
    </style>
}
@section scripts {

    <script>
        var isEditingPayComponents = false;
        var curPayComponentsEditRow;

        let payComponents = []
        let gridObj;
        let options = {
            buttonWidth: '100%',
            includeSelectAllOption: true,
            enableFiltering: false,
            enableClickableOptGroups: true,
            includeResetOption: true,
            includeResetDivider: true,
            enableCollapsibleOptGroups: true
        };
        $('#payFrequencyId').multiselect(options);
        $('#payCurrencyId').multiselect(options);
        $('#payComponentType').multiselect(options);

        $(document).ready(function () {
            $.each($('.payRangeId'), function (i, x) { $(x).multiselect(options) });

            gridObj = $("#PayComponentsGrid")[0].ej2_instances[0];
            gridObj.showSpinner();
            $('#payComponentsLoader').slideDown(100);
            cERP.appServices.hR.organizationalManagement.payrollStructure.pS_PayComponent.getAllComponents().done(function (data) {
                gridObj.hideSpinner();

                gridObj.dataSource = data;
                setTimeout(function () { gridObj.hideSpinner() }, 200);
            });
            cERP.appServices.hR.organizationalManagement.payrollStructure.pS_PayComponentType.getAllPayComponentTypes().done(function (data) {
                $('#payComponentsLoader').slideUp(100);

                let dataMS = [];
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    dataMS.push({ label: `${item.code} - ${item.name}`, value: item.id, data: item });
                }
                console.log(dataMS);
                $.each($('.payComponentType'), function (i, x) { $(x).multiselect('dataprovider', dataMS) });
            });
            cERP.appServices.setup.currencySetup.currency.getList({}).done(function (data) {
                $('#payComponentsLoader').slideUp(100);

                let dataMS = [];
                for (let i = 0; i < data.items.length; i++) {
                    let item = data.items[i];
                    dataMS.push({ label: `${item.currencyCode} - ${item.currencyName}`, value: item.id, data: item });
                }
                $.each($('.payCurrencyId'), function (i, x) { $(x).multiselect('dataprovider', dataMS) });
            });
            cERP.appServices.hR.organizationalManagement.payrollStructure.pS_PayFrequency.getAllPayFrequencies().done(function (data) {
                $('#payComponentsLoader').slideUp(100);

                let dataMS = [];
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    dataMS.push({ label: `${item.code} - ${item.name}`, value: item.id, data: item });
                }
                $.each($('.payFrequencyId'), function (i, x) { $(x).multiselect('dataprovider', dataMS) });
            });

            $('#addPayComponentsBtn').on('click', function () {
                isEditingPayComponents = false;

                let tabs = $('#payComponentSpecificFormTabs')[0].ej2_instances[0];
                tabs.properties.items[1].visible = false;

                $('#submitPayComponentBtn').val('Create PayComponent');
            });
            $('#submitPayComponentBtn').on('click', function (e) {
                e.preventDefault();
                submitPayComponentBtn('payComponentSpecificForm');
            });
        });
        function submitPayComponentBtn(formId) {
            if (ValidateForm(formId)) {
                gridObj.showSpinner();
                Swal.showLoading();

                let form = [];
                let functionDetails = $('#' + formId).find("textarea, input, select").serializeArray();
                form = form.concat(functionDetails);

                let params = objectifyForm(form);
                params = Object.fromEntries(
                    // convert to array, map, and then fromEntries gives back the object
                    Object.entries(params).map(([key, value]) => [key, value == 'on' || value == 'off'? value == 'on' : value ])
                );

                let id = 0;
                if (gridObj.dataSource.length > 0)
                    id = gridObj.dataSource[gridObj.dataSource.length - 1].id;

                params.isEditing = isEditingPayComponents;

                if (isEditingPayComponents) {
                    params.id = curPayComponentsEditRow.id;

                    //cERP.appServices.hR.leaveRequestTemplates.update()
                }
                else {

                    //cERP.appServices.hR.leaveRequestTemplates.update()
                }

                let formData = new FormData();
                formData.append("info", JSON.stringify(params));
                let xhrToken = $('input:hidden[name="__RequestVerificationToken"]').val();
                formData.append("__RequestVerificationToken", xhrToken);
                console.log(params);

                $.ajax({
                    url: "?handler=PayComponent",
                    async: true,
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        Swal.hideLoading();
                        console.log(data);
                        if (isEditingPayComponents) {
                            gridObj.refresh(); // refresh the Grid.

                            swal.fire("Success", "Pay Component has successfully been updated", "success");

                            for (let i = 0; i < gridObj.dataSource.length; i++) {
                                if (gridObj.dataSource[i].id == data.id) {
                                    gridObj.dataSource[i] = data;
                                }
                            }
                            gridObj.refresh();
                        }
                        else {
                            gridObj.dataSource.push(data);

                            gridObj.refresh(); // refresh the Grid.

                            swal.fire("Success", "Pay Component has successfully been added", "success");
                        }
                        gridObj.hideSpinner();
                    },
                    error: function (err) {
                        Swal.hideLoading();
                        if (isEditingPayComponents)
                            swal.fire("Failed", "Pay Component couldn't be updated, please fix all errors and try again.", "error");
                        else
                            swal.fire("Failed", "Pay Component couldn't be added, please fix all errors and try again.", "error");

                        console.log(err);
                        gridObj.hideSpinner();
                    }
                });
            }
            else {
                Swal.close();
                Swal.hideLoading();
            }
        }
    </script>
}
<partial name="_DefaultPageHeader" />
<div class="site-content customContentArea">
    <div class="control-section">
        <div class="areaHeader" style="display:flex;">
            <div id="payComponentsLoader" class="pull-left loader-inline" style="display:none"></div>
            <div class="areaHeaderTitle">
                <span id="areHeadertitle" class="areaHeaderTitleNode menu-text">Current Pay Components</span>
                @*<span id="" class="areaHeaderTitleInNode menu-text"> > </span>*@
                @*<span id="subTitle" class="menu-text" style="padding-left:15px; font-size: 28px; font-family:Roboto; font-weight:200;">@ViewData["SubTitle"]</span>*@
            </div>
            @*<h3 class="control-label" style="flex-grow: 1; margin:0">Approval Route</h3>*@
            <div class="pull-right text-right p-r-20 areaHeaderBtnSec">
                @*<div class="clearfix margin-15"></div>*@
                <a id="addPayComponentsBtn" onclick="areaHeaderBtnClick(event); isEditingPayComponents = false;" class="btn btn-outline-dark areaHeaderBtn"><i class="fa fa-plus fa-fw"></i> Add New</a>
            </div>
        </div>
        <form id="payComponentsForm" onkeydown="return event.key != 'Enter';" class="row areaForm" method="post" data-toggle="validator" style="display: none; margin:0; padding:20px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.05), 0 0px 10px 0px rgba(0, 0, 0, 0.05);">
            <div id="payComponentSpecificForm">
                <ejs-tab id="payComponentSpecificFormTabs" animation="ViewBag.animation" height="250px">
                    <e-tab-tabitems>
                        <e-tab-tabitem header="@(new TabHeader { Text = "General" })" content="#generalTab"></e-tab-tabitem>
                        <e-tab-tabitem header="@(new TabHeader { Text = "References" })" visible="false" content="#referencesTab"></e-tab-tabitem>
                    </e-tab-tabitems>
                </ejs-tab>
                <div id="generalTab">
                    <div class="col-sm-1" style="padding:0">
                    </div>
                    <div class="col-sm-9" style="padding:0">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Pay Component Code:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <input type="text" id="payComponentCode" name="Code" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right ">Title:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <input type="text" id="payComponentTitle" name="Name" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control " required>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right ">Title (In Arabic):</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <input type="text" id="payComponentTitleLocalized" name="NameLocalized" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Description:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <input type="text" id="payComponentDescription" name="Description" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Pay Component Status:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <select id="payComponentStatus" name="PayComponentStatus" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                        @for (int i = 0; i < payComponentStatuses.Count; i++)
                                        {
                                            <option value="@((int)payComponentStatuses[i])" data-value="@EnumExtensions.GetDescription(payComponentStatuses[i])">@EnumExtensions.GetDescription(payComponentStatuses[i])</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Pay Component Type:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <select id="payComponentType" class="payComponentType" name="PayComponentTypeId" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Is Earning:</label>
                                </div>
                                <div class="col-sm-1" style="">
                                    <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsEarning" name="IsEarning" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Currency:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <select id="payCurrencyId" class="payCurrencyId" name="CurrencyId" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Pay Component Value:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <input type="number" min="1" id="payComponentValue" name="PayComponentValue" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Pay Frequency:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <select id="payFrequencyId" class="payFrequencyId" name="PayFrequencyId" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Is Recurring:</label>
                                </div>
                                <div class="col-sm-1" style="">
                                    <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsRecurring" name="IsRecurring" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Income Tax Treatment:</label>
                                </div>
                                <div class="col-sm-1" style="">
                                    <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsIncomeTaxTreatment" name="IsIncomeTaxTreatment" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Social Insurance Treatment:</label>
                                </div>
                                <div class="col-sm-1" style="">
                                    <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsGOSITreatment" name="IsGOSITreatment" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">EOSB Treatment:</label>
                                </div>
                                <div class="col-sm-1" style="">
                                    <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsEOSBTreatment" name="IsEOSBTreatment" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Can Override:</label>
                                </div>
                                <div class="col-sm-1" style="">
                                    <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentCanOverride" name="CanOverride" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Self Service Visibility:</label>
                                </div>
                                <div class="col-sm-1" style="">
                                    <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentSelfServiceVisibility" name="SelfServiceVisibility" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Self Service Description:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <input type="text" id="payComponentSelfServiceDescription" name="SelfServiceDescription" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Used For Comp Planning:</label>
                                </div>
                                <div class="col-sm-1" style="">
                                    <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsUsedForCompPlanning" name="IsUsedForCompPlanning" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Recurring Payment And Deduction:</label>
                                </div>
                                <div class="col-sm-1" style="">
                                    <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsRecurringPaymentAndDeduction" name="IsRecurringPaymentAndDeduction" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Max Decimal Places:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <input type="number" min="1" id="payComponentMaxDecimalPlaces" name="MaxDecimalPlaces" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div class="form-group" style="padding: 15px">
                                <div class="col-sm-4" style="">
                                    <label class="p-t-5 control-label pull-right">Effective Date:</label>
                                </div>
                                <div class="col-sm-8" style="">
                                    <input type="date" id="payComponentEffectiveDate" name="EffectiveDate" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2" style="padding:0">
                        <h3>@*Last Updated by * at */*/**@</h3>

                    </div>
                </div>
                <div id="referencesTab" class="areaForm" style="display:none">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="panel-body p-t-0" style="">
                                <div id="referencesCS" class="control-section">
                                    <ejs-grid id="ReferenceReferenceGrid" enableAutoFill="true" dataBound="dataBoundResponsive"
                                              allowExcelExport="true" height="100%" allowPdfExport="true" allowReordering="true"
                                              hierarchyPrintMode="Expanded" allowSelection="true" allowFiltering="true"
                                              allowSorting="true" allowMultiSorting="true" gridLines="Horizontal" dataSource="new List<dynamic>()"
                                              toolbar="@initialToolBar" toolbarClick="defaultToolbarClick"
                                              allowPaging="true" allowResizing="true">

                                        <e-grid-columns>
                                            <e-grid-column field="id" headerText="Id" textAlign="Center" visible="false" isPrimaryKey="true" showInColumnChooser="false"></e-grid-column>
                                            <e-grid-column field="type" allowEditing="false" headerText="Type" textAlign="Center"></e-grid-column>
                                            <e-grid-column field="name" allowEditing="false" headerText="Name" textAlign="Center"></e-grid-column>
                                            <e-grid-column field="code" allowEditing="false" headerText="Code" textAlign="Center"></e-grid-column>
                                            @*<e-grid-column headerText="Actions" textAlign="Center" commands="referenceCommands"></e-grid-column>*@
                                        </e-grid-columns>

                                        <e-grid-filterSettings type="CheckBox"></e-grid-filterSettings>
                                        <e-grid-editSettings showDeleteConfirmDialog="true" showConfirmDialog="true" allowAdding="true" allowDeleting="true" allowEditing="true"></e-grid-editSettings>
                                        <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
                                        <e-grid-pagesettings pageCount="5" pageSizes="@(new string[] { "5", "10" , "20", "All" })"></e-grid-pagesettings>
                                    </ejs-grid>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label class="control-label m-b-5 "></label>
                        <input id="submitPayComponentBtn" type="button" class="btn btn-success btn-block" value="Create Pay Component" required />
                    </div>
                </div>
            </div>
        </form>
        <div id="payComponentsCS" class="control-section">
            <ejs-grid id="PayComponentsGrid" enableAutoFill="true" dataBound="dataBoundResponsive" commandClick="commandClick"
                      showColumnChooser="true" allowExcelExport="true" height="100%" allowPdfExport="true" allowReordering="true"
                      hierarchyPrintMode="Expanded" allowSelection="true" allowFiltering="true" actionBegin="payComponentActionBegin" actionComplete="payComponentActionComplete"
                      allowSorting="true" allowMultiSorting="true" gridLines="Horizontal" allowTextWrap="true" textWrapSettings="@(new Syncfusion.EJ2.Grids.GridTextWrapSettings() { WrapMode = Syncfusion.EJ2.Grids.WrapMode.Header })"
                      toolbarClick="toolbarClick" toolbar="@initialToolBar"
                      detailTemplate="#payComponentSpecificTemplate" detailDataBound="detailDataBound"
                      allowPaging="true" allowResizing="true">

                <e-grid-columns>
                    <e-grid-column field="id" headerText="Id" isPrimaryKey="true" textAlign="Center" visible="false" showInColumnChooser="false"></e-grid-column>
                    <e-grid-column headerText="Name" textAlign="Center" columns='new List<Syncfusion.EJ2.Grids.GridColumn>() {
                        new Syncfusion.EJ2.Grids.GridColumn() { Field= "name", HeaderText = "English", TextAlign = Syncfusion.EJ2.Grids.TextAlign.Center },
                        new Syncfusion.EJ2.Grids.GridColumn() { Field= "nameLocalized", HeaderText = "Local", TextAlign = Syncfusion.EJ2.Grids.TextAlign.Center }
                    }'></e-grid-column>
                    <e-grid-column field="code" headerText="Code" textAlign="Center"></e-grid-column>
                    <e-grid-column field="description" headerText="Description" allowEditing="true" textAlign="Center"></e-grid-column>
                    <e-grid-column field="statusDescription" allowEditing="false" headerText="Status" textAlign="Center"></e-grid-column>
                    <e-grid-column field="payComponentType.name" headerText="Component Type" allowEditing="true" textAlign="Center"></e-grid-column>
                    <e-grid-column field="currency.currencyName" headerText="Currency" allowEditing="true" textAlign="Center"></e-grid-column>
                    <e-grid-column field="payFrequency.name" headerText="Pay Frequency" allowEditing="true" textAlign="Center"></e-grid-column>
                    <e-grid-column field="isEarning" allowEditing="false" headerText="Is Earning" textAlign="Center"></e-grid-column>
                    <e-grid-column field="canOverride" showInColumnChooser="true" allowEditing="false" headerText="Override" textAlign="Center"></e-grid-column>
                    <e-grid-column field="isRecurring" showInColumnChooser="true" visible="false" allowEditing="false" headerText="Recurring" textAlign="Center"></e-grid-column>
                    <e-grid-column field="isIncomeTaxTreatment" showInColumnChooser="true" visible="false" allowEditing="false" headerText="Income Tax Treatment" textAlign="Center"></e-grid-column>
                    <e-grid-column field="isGOSITreatment" showInColumnChooser="true" visible="false" allowEditing="false" headerText="GOSI Treatment" textAlign="Center"></e-grid-column>
                    <e-grid-column field="isEOSBTreatment" showInColumnChooser="true" visible="false" allowEditing="false" headerText="EOSB Treatment" textAlign="Center"></e-grid-column>
                    <e-grid-column field="selfServiceVisibility" showInColumnChooser="true" visible="false" allowEditing="false" headerText="Self Service Visibility" textAlign="Center"></e-grid-column>
                    <e-grid-column field="selfServiceDescription" showInColumnChooser="true" visible="false" allowEditing="false" headerText="Self Service Description" textAlign="Center"></e-grid-column>
                    <e-grid-column field="isUsedForCompPlanning" showInColumnChooser="true" visible="false" allowEditing="false" headerText="Used For Comp Planning" textAlign="Center"></e-grid-column>
                    <e-grid-column field="isRecurringPaymentAndDeduction" showInColumnChooser="true" visible="false" allowEditing="false" headerText="Recurring Payment And Deduction" textAlign="Center"></e-grid-column>
                    <e-grid-column field="maxDecimalPlaces" showInColumnChooser="true" visible="false" allowEditing="false" headerText="Max Decimal Places" textAlign="Center"></e-grid-column>
                    <e-grid-column field="effectiveDate" showInColumnChooser="true" visible="false" allowEditing="false" headerText="Effective Date" textAlign="Center"></e-grid-column>

                    <e-grid-column headerText="Actions" textAlign="Center" commands="payComponentsCommands"></e-grid-column>
                </e-grid-columns>

                <e-grid-filterSettings type="CheckBox"></e-grid-filterSettings>
                <e-grid-editSettings showDeleteConfirmDialog="true" showConfirmDialog="true" allowAdding="true" allowDeleting="true" allowEditing="false"></e-grid-editSettings>
                <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
                <e-grid-pagesettings pageCount="5" pageSizes="@(new string[] { "5", "10" , "20", "All" })"></e-grid-pagesettings>
            </ejs-grid>


            <script type="text/x-jsrender" id="payComponentSpecificTemplate">
                <div id="payComponentSpecificTemplateForm${id}" role="form" class="col-md-12">

                    <div class="col-md-12">
                        <div id="accordingHtml${id}" class="col-ms-4">

                        </div>


                        <div id="generalTabTemplate${id}" style="display:none">
                            <div class="col-md-1">

                            </div>
                            <div class="col-md-9" style="padding:0">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Pay Component Code:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <input type="text" id="payComponentCode" name="Code" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right ">Title:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <input type="text" id="payComponentTitle" name="Name" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control " required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right ">Title (In Arabic):</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <input type="text" id="payComponentTitleLocalized" name="NameLocalized" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Description:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <input type="text" id="payComponentDescription" name="Description" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Pay Component Status:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <select id="payComponentStatus" name="PayComponentStatus" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                                @for (int i = 0; i < payComponentStatuses.Count; i++)
                                                {
                                                    <option value="@((int)payComponentStatuses[i])" data-value="@EnumExtensions.GetDescription(payComponentStatuses[i])">@EnumExtensions.GetDescription(payComponentStatuses[i])</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Pay Component Type:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <select id="payComponentType" class="payComponentType" name="PayComponentTypeId" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Is Earning:</label>
                                        </div>
                                        <div class="col-sm-1" style="">
                                            <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsEarning" name="IsEarning" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Currency:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <select id="payCurrencyId" class="payCurrencyId" name="CurrencyId" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Pay Component Value:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <input type="number" min="1" id="payComponentValue" name="PayComponentValue" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Pay Frequency:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <select id="payFrequencyId" class="payFrequencyId" name="PayFrequencyId" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Is Recurring:</label>
                                        </div>
                                        <div class="col-sm-1" style="">
                                            <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsRecurring" name="IsRecurring" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Income Tax Treatment:</label>
                                        </div>
                                        <div class="col-sm-1" style="">
                                            <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsIncomeTaxTreatment" name="IsIncomeTaxTreatment" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Social Insurance Treatment:</label>
                                        </div>
                                        <div class="col-sm-1" style="">
                                            <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsGOSITreatment" name="IsGOSITreatment" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">EOSB Treatment:</label>
                                        </div>
                                        <div class="col-sm-1" style="">
                                            <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsEOSBTreatment" name="IsEOSBTreatment" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Can Override:</label>
                                        </div>
                                        <div class="col-sm-1" style="">
                                            <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentCanOverride" name="CanOverride" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Self Service Visibility:</label>
                                        </div>
                                        <div class="col-sm-1" style="">
                                            <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentSelfServiceVisibility" name="SelfServiceVisibility" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Self Service Description:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <input type="text" id="payComponentSelfServiceDescription" name="SelfServiceDescription" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Used For Comp Planning:</label>
                                        </div>
                                        <div class="col-sm-1" style="">
                                            <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsUsedForCompPlanning" name="IsUsedForCompPlanning" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Recurring Payment And Deduction:</label>
                                        </div>
                                        <div class="col-sm-1" style="">
                                            <input type="checkbox" style="max-height: 20px; min-height: 20px; max-width: 20px; min-width: 20px" id="payComponentIsRecurringPaymentAndDeduction" name="IsRecurringPaymentAndDeduction" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Max Decimal Places:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <input type="number" min="1" id="payComponentMaxDecimalPlaces" name="MaxDecimalPlaces" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div class="form-group" style="padding: 15px">
                                        <div class="col-sm-4" style="">
                                            <label class="p-t-5 control-label pull-right">Effective Date:</label>
                                        </div>
                                        <div class="col-sm-8" style="">
                                            <input type="date" id="payComponentEffectiveDate" name="EffectiveDate" @* value = "@(empInfo!=null? empInfo.EMAIL : "")"*@ class="form-control" required>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">

                            </div>
                        </div>
                        <div id='referencesTabTemplate${id}' style="display:none">

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="panel-body p-t-0" style="">
                                        <div id="referencesCS${id}" class="control-section">
                                            <div id="referencesGrid${id}">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="updatePayComponentBtn${id}" class="row" style="display:none">
                            <div class="col-md-12">
                                <label class="control-label m-b-5 "></label>
                                <input id="submitPayComponentBtn${id}" type="button" class="btn btn-success btn-block" value="Update PayComponent" required />
                            </div>
                        </div>
                    </div>
                </div>
            </script>
            <script>
                function detailDataBound(args) {
                    let params = args.data;

                    $('#payFrequencyId', `#generalTabTemplate${params.id}`).multiselect(options);
                    $('#payCurrencyId', `#generalTabTemplate${params.id}`).multiselect(options);
                    $('#payComponentType', `#generalTabTemplate${params.id}`).multiselect(options);

                    $('#payComponentsLoader').slideDown();
                    cERP.appServices.hR.organizationalManagement.payrollStructure.pS_PayComponentType.getAllPayComponentTypes().done(function (data) {
                        $('#payComponentsLoader').slideUp(100);

                        let dataMS = [];
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            dataMS.push({ label: `${item.code} - ${item.name}`, value: item.id, data: item });
                        }
                        $('.payComponentType', `#generalTabTemplate${params.id}`).multiselect('dataprovider', dataMS)
                        $('.payComponentType', `#generalTabTemplate${params.id}`).multiselect('select', params.payComponentTypeId)
                    });
                    cERP.appServices.setup.currencySetup.currency.getList({}).done(function (data) {
                        $('#payComponentsLoader').slideUp(100);

                        let dataMS = [];
                        for (let i = 0; i < data.items.length; i++) {
                            let item = data.items[i];
                            dataMS.push({ label: `${item.currencyCode} - ${item.currencyName}`, value: item.id, data: item });
                        }
                        $('.payCurrencyId', `#generalTabTemplate${params.id}`).multiselect('dataprovider', dataMS)
                        $('.payCurrencyId', `#generalTabTemplate${params.id}`).multiselect('select', params.currencyId)
                    });
                    cERP.appServices.hR.organizationalManagement.payrollStructure.pS_PayFrequency.getAllPayFrequencies().done(function (data) {
                        $('#payComponentsLoader').slideUp(100);

                        let dataMS = [];
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            dataMS.push({ label: `${item.code} - ${item.name}`, value: item.id, data: item });
                        }
                        $('.payFrequencyId', `#generalTabTemplate${params.id}`).multiselect('dataprovider', dataMS)
                        $('.payFrequencyId', `#generalTabTemplate${params.id}`).multiselect('select', params.payFrequencyId)
                    });

                    cERP.appServices.hR.organizationalManagement.payrollStructure.pS_PayRange.getAllPayRanges().done(function (data) {
                        $('#payComponentsLoader').slideUp(100);

                        let dataMS = [];
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            dataMS.push({ label: `${item.code} - ${item.name}`, value: item.id, data: item });
                        }
                        console.log(dataMS);
                        $('.payRangeId', `#generalTabTemplate${params.id}`).multiselect('dataprovider', dataMS)
                        $('.payRangeId', `#generalTabTemplate${params.id}`).multiselect('select', params.payRangeId)
                    });
                    elmm = args;
                    var accordion = new ej.navigations.Accordion({
                        items: [
                            { header: 'General', expanded: 'true', content: '#generalTabTemplate' + params.id },
                            { header: 'References', content: '#referencesTabTemplate' + params.id },
                        ]
                    });
                    accordion.appendTo($(args.detailElement).find('#accordingHtml' + params.id)[0]);

                    var refGrid = new ej.grids.Grid({
                        id: 'detailReferencesGrid' + params.id,
                        columns: [
                            { field: 'id', headerText: 'Id', textAlign: 'Center', visible: 'false', isPrimaryKey: 'true', showInColumnChooser: 'false', },
                            { field: 'type', allowEditing: 'false', headerText: 'Type', textAlign: 'Center', },
                            { field: 'name', allowEditing: 'false', headerText: 'Name', textAlign: 'Center', },
                            { field: 'code', allowEditing: 'false', headerText: 'Code', textAlign: 'Center', },

                        ],
                    });
                    refGrid.appendTo($(args.detailElement).find('#referencesGrid' + params.id)[0]);

                    $('#updatePayComponentBtn' + params.id).on('click', function () {
                        submitPayComponentBtn('payComponentSpecificTemplateForm' + params.id);
                    });

                    fillDetailForm(params, false)
                }

                function fillDetailForm(params, isEditing) {
                    FillDivFormByObject(params, $('#generalTabTemplate' + params.id).find('input, select'));
                    if (!isEditing) {
                        $.each($('#generalTabTemplate' + params.id + ' :input'), function (index, value) {
                            $(value).attr('readonly', 'readonly');
                            
                        });
                        $.each($('#generalTabTemplate' + params.id + ' select'), function (index, value) {
                            $(value).attr('readonly', 'readonly');
                            if ($(value).parent()[0].className.includes('multiselect')) {
                                setTimeout($(`.${$(value)[0].className}`, '#generalTabTemplate' + params.id).multiselect('disable'), 1000);
                            }
                        });

                        $('#updatePayComponentBtn' + params.id).slideUp();
                    }
                    else {
                        $.each($('#generalTabTemplate' + params.id + ' :input'), function (index, value) {
                            $(value).removeAttr('readonly');
                        });
                        $.each($('#generalTabTemplate' + params.id + ' select'), function (index, value) {
                            $(value).removeAttr('readonly');
                            if ($(value).parent()[0].className.includes('multiselect'))
                                setTimeout($(`.${$(value)[0].className}`, '#generalTabTemplate' + params.id).multiselect('enable'), 1000);
                        });

                        $('#updatePayComponentBtn' + params.id).slideDown();
                    }
                    $('#payComponentsLoader').slideDown(100);
                    cERP.appServices.hR.organizationalManagement.payrollStructure.pS_PayComponent.get(params.id).done(function (data) {
                        $('#payComponentsLoader').slideUp(100);
                    });
                    cERP.appServices.hR.organizationalManagement.payrollStructure.pS_PayComponent.getAllReferences(params.id).done(function (data) {

                        let refGrid = $('#referencesGrid' + params.id)[0].ej2_instances[0];
                        refGrid.dataSource = data;
                        refGrid.refresh();

                        setTimeout(function () { refGrid.hideSpinner() }, 200);
                    });
                }
            </script>
        </div>
        <div id="auditTrail" style="display:none;">
            @*<partial name="_DataAuditTrailPartialView" model="@Model.GetDataAuditTrailModel()" />*@
        </div>
    </div>

</div>
<ejs-dialog id="alert_dialog" animationSettings="alertanimation" visible="false" target=".control-section" width="300px" header="Copy with Header" content="Atleast one row should be selected to copy with header">
    <e-dialog-buttons>
        <e-dialog-dialogbutton buttonModel="@ViewData["alertbutton"]" click="alertBtnClick"></e-dialog-dialogbutton>
    </e-dialog-buttons>
</ejs-dialog>
<ejs-dialog id="alert_dialog_1" animationSettings="alertanimation" visible="false" target=".control-section" width="300px" header="Copy" content="Atleast one row should be selected to copy">
    <e-dialog-buttons>
        <e-dialog-dialogbutton buttonModel="@ViewData["alertbutton"]" click="alertBtnClick"></e-dialog-dialogbutton>
    </e-dialog-buttons>
</ejs-dialog>

<script>
    function loadPositionStatusesDropdown() {

    }

    let isAuditTrail = false;

    function alertBtnClick() {
        let dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
        let dialogObj1 = document.getElementById('alert_dialog_1').ej2_instances[0];
        dialogObj.hide();
        dialogObj1.hide();
    }
    function toolbarClick(args) {
        let gridObj = document.getElementById("PayComponentsGrid").ej2_instances[0];

        if (args.item.id === 'PayComponentsGrid_pdfexport') {
            gridObj.pdfExport();
        }
        if (args.item.id === 'PayComponentsGrid_excelexport') {
            gridObj.excelExport();
        }
        if (args.item.id === 'PayComponentsGrid_csvexport') {
            gridObj.csvExport();
        }
        if (this.getSelectedRecords().length > 0) {
            let withHeader = false;
            if (args.item.id === 'copyHeader') {
                withHeader = true;
            }
            this.copy(withHeader);
        }
        else {
            if (args.item.id === 'copyHeader') {
                let dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
                dialogObj.show();
            }
            else if (args.item.id === 'copy') {
                let dialogObj = document.getElementById('alert_dialog_1').ej2_instances[0];
                dialogObj.show();
            }
        }
        if (args.item.id === 'showActions') {
            gridObj.toolbar = [{ text: "Hide Actions", tooltipText: "Actions", prefixIcon: "e-custom-hide-actions", id: "hideActions" }, { text: "Toggle Grouping", tooltipText: "Grouping", prefixIcon: "e-custom-group-toggle", id: "toggleGrouping" }, { text: "Audit Trail", tooltipText: "View Audit Trail", prefixIcon: "e-custom-audit-trail", id: "toggleaudittrail" }, { text: "Toggle Detailed", tooltipText: "Toggle Detailed", prefixIcon: "e-toggledetailed", id: "toggleDetailed" }, { text: "ExcelExport", tooltipText: "Excel Export", prefixIcon: "e-excelexport", id: this.element.id + "_excelexport", align: 'Right' }, { text: this.element.id + "_PdfExport", tooltipText: "Pdf Export", prefixIcon: "e-pdfexport", id: "pdfexport", align: 'Right' }, { text: "CsvExport", tooltipText: "Csv Export", prefixIcon: "e-csvexport", id: this.element.id + "_csvexport", align: 'Right' }, { text: "Print", tooltipText: "Print", prefixIcon: "e-print", id: this.element.id + "_print", align: 'Right' }, { text: "Copy", tooltipText: "Copy", prefixIcon: "e-copy", id: "copy" }, "Search", { text: "Copy With Header", tooltipText: "Copy With Header", prefixIcon: "e-copy", id: "copyHeader" }, "ColumnChooser"];
            gridObj.refresh();
        }
        if (args.item.id === 'hideActions') {
            gridObj.toolbar = [{ text: "Show Actions", tooltipText: "Actions", prefixIcon: "e-custom-show-actions", id: "showActions" }, "Search", "ColumnChooser"];
            gridObj.showColumnChooser = true;
            gridObj.refresh();
        }
        if (args.item.id === 'toggleGrouping') {
            gridObj.allowGrouping = !gridObj.allowGrouping;
            gridObj.refresh();
        }
        if (args.item.id === 'toggleDetailed') {
            let visCount = 0;
            for (let i = 0; i < gridObj.columns.length; i++) {
                if (gridObj.columns[i].visible) visCount++;
            }
            if (visCount == gridObj.columns.length) {
                for (let i = 0; i < gridObj.columns.length; i++) {
                    let col = gridObj.columns[i];
                    if (typeof col.customAttributes != 'undefined' && typeof col.customAttributes.id != 'undefined' && col.customAttributes.id == 'detailed')
                        gridObj.showHider.hide(col.headerText, 'headerText');
                    else if (col.showInColumnChooser)
                        gridObj.showHider.show(col.headerText, 'headerText');
                }
            }
            else {
                for (let i = 0; i < gridObj.columns.length; i++) {
                    let col = gridObj.columns[i];
                    if (col.showInColumnChooser)
                        gridObj.showHider.show(col.headerText, 'headerText');
                }
            }
        }
        if (args.item.id === 'toggleaudittrail') {

            if (!isAuditTrail) {
                var agtGrid = $("#AuditTrailGrid")[0].ej2_instances[0];
                gridObj.showSpinner();

                $.ajax({
                    url: '?handler=DataAuditTrail',
                    async: true,
                    type: "GET",
                    data: {},
                    success: function (data) {
                        gridObj.hideSpinner();

                        //agtGrid.childGrid.childGrid.dataSource = data.tertiaryDS;
                        //agtGrid.childGrid.dataSource = data.secondaryDS;
                        agtGrid.dataSource = data.ds;
                        agtGrid.refresh();

                        $(".customContentArea").css('position', 'unset');
                        $("#auditTrail").slideDown(200);
                    },
                    error: function (data) {
                        gridObj.hideSpinner();

                        $(".customContentArea").css('position', 'absolute');
                        $("#auditTrail").slideUp(200);

                        swal.fire('Failed', `An error occured while generating the audit trail`, 'error');
                    }
                });

            }
            else {
                $(".customContentArea").css('position', 'absolute');
                $("#auditTrail").slideUp(200);
            }

            isAuditTrail = !isAuditTrail;
        }
        setTimeout(function () { gridObj.hideSpinner() }, 200);
    }
    function commandClick(args) {
        let gridObj = document.getElementById("PayComponentsGrid").ej2_instances[0];
        if (args.commandColumn.type == "View") {
            isEditingPayComponents = false;
            curPayComponentsEditRow = null;
        }
        else if (args.commandColumn.type == "Edit") {
            isEditingPayComponents = true;
            curPayComponentsEditRow = args.rowData;
        }
        newDefaultCommandClick(gridObj, args);
    }
    function payComponentActionComplete(args) {
        let gridObj = document.getElementById("PayComponentsGrid").ej2_instances[0];
        setTimeout(function () { gridObj.hideSpinner() }, 200)
    }
    function payComponentActionBegin(args) {
        if (args.requestType == "delete") {
            let gridObj = document.getElementById("PayComponentsGrid").ej2_instances[0];
            Swal.showLoading();

            let formData = new FormData();
            formData.append("payComponents", JSON.stringify(args.data));
            let xhrToken = $('input:hidden[name="__RequestVerificationToken"]').val();
            formData.append("__RequestVerificationToken", xhrToken);

            $.ajax({
                url: '?handler=PayComponent',
                async: true,
                type: "DELETE",
                data: formData,
                contentType: false,
                processData: false,
                success: function (data) {
                    gridObj.hideSpinner();
                    swal.fire("Success", "PayComponent(s) has successfully been deleted", "success");

                    if ($('#payComponentsForm').css('display') !== 'none') {
                        $('#payComponentsForm').slideUp();
                    }
                },
                error: function (err) {
                    gridObj.hideSpinner();
                    swal.fire("Failed", "PayComponent(s) couldn't be deleted, please fix all errors and try again.", "error");

                    console.log(err);
                }
            });
            setTimeout(function () { gridObj.hideSpinner() }, 200);
        }
    }
</script>

