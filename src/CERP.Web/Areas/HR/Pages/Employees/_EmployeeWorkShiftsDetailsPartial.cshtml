@using CERP.App;
@using Syncfusion.EJ2.Grids;
@addTagHelper *, Syncfusion.EJ2
@{
    List<GridColumn> workShiftsColumns = (List<GridColumn>)ViewData["workShiftsColumns"];
    object workShiftsDS = (object)ViewData["workShiftsDS"];
    List<DictionaryValue> workShifts = (List<DictionaryValue>)ViewData["workShifts"];

    var alertanimation = new Syncfusion.EJ2.Popups.DialogAnimationSettings { Effect = Syncfusion.EJ2.Popups.DialogEffect.None };
}

@section scripts{
    <script>

    </script>
}

<div class="m-l-20 m-t-0">
    <h2>Work Shifts Details</h2>
    <p>
        Provide work shifts of the employee
    </p>
</div>
<div class="panel-body" style="padding-bottom:0">
    <div class="col-lg-12 padding-right-0">

        <div class="control-section">
            <ejs-grid id="Grid3" dataSource="@workShiftsDS" enableAutoFill="true" columns="@workShiftsColumns"
                        dataBound="dataBound" commandClick="commandClick"
                        allowExcelExport="true" allowGrouping="true" allowPdfExport="true"
                        hierarchyPrintMode="All" allowSelection="true" allowFiltering="true"
                        allowSorting="true" allowMultiSorting="true" gridLines="Both"
                        toolbarClick="toolbarClick" toolbar="@(new List<object>() {"ExcelExport", "PdfExport", "CsvExport", "Print", "Search", "Delete", new { text = "Copy", tooltipText = "Copy", prefixIcon = "e-copy", id = "copy" }, new { text = "Copy With Header", tooltipText = "Copy With Header", prefixIcon = "e-copy", id = "copyHeader" } })"
                        contextMenuItems="@(new List<object>() { "AutoFit", "AutoFitAll", "SortAscending", "SortDescending","Copy", "Edit", "Delete", "Save", "Cancel","PdfExport", "ExcelExport", "CsvExport", "FirstPage", "PrevPage","LastPage", "NextPage"})"
                        allowPaging="true" allowResizing="true">

                <e-grid-editSettings showDeleteConfirmDialog="true" showConfirmDialog="true" allowAdding="true" allowDeleting="true" allowEditing="false"></e-grid-editSettings>
                <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
                <e-grid-pagesettings pageCount="5" pageSizes="@(new string[] { "5", "10" , "20", "All" })"></e-grid-pagesettings>
            </ejs-grid>
        </div>

        <ejs-dialog id="alert_dialog" animationSettings="alertanimation" visible="false" target=".control-section" width="300px" header="Copy with Header" content="Atleast one row should be selected to copy with header">
            <e-dialog-buttons>
                <e-dialog-dialogbutton buttonModel="@ViewData["alertbutton"]" click="alertBtnClick"></e-dialog-dialogbutton>
            </e-dialog-buttons>
        </ejs-dialog>
        <ejs-dialog id="alert_dialog_1" animationSettings="alertanimation" visible="false" target=".control-section" width="300px" header="Copy" content="Atleast one row should be selected to copy">
            <e-dialog-buttons>
                <e-dialog-dialogbutton buttonModel="@ViewData["alertbutton"]" click="alertBtnClick"></e-dialog-dialogbutton>
            </e-dialog-buttons>
        </ejs-dialog>
    </div>
</div>

<script>

    function toolbarClick(args) {
        var gridObj = document.getElementById("Grid").ej2_instances[0];
        if (args.item.id === 'Grid_pdfexport') {
            gridObj.pdfExport();
        }
        if (args.item.id === 'Grid_excelexport') {
            gridObj.excelExport();
        }
        if (args.item.id === 'Grid_csvexport') {
            gridObj.csvExport();
        }
        if (this.getSelectedRecords().length > 0) {
            var withHeader = false;
            if (args.item.id === 'copyHeader') {
                withHeader = true;
            }
            this.copy(withHeader);
        } else {
            if (args.item.id === 'copyHeader') {
                var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
                dialogObj.show();
            }
            else if (args.item.id === 'copy') {
                var dialogObj = document.getElementById('alert_dialog_1').ej2_instances[0];
                dialogObj.show();
            }
        }
    }
    function alertBtnClick() {
        var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
        var dialogObj1 = document.getElementById('alert_dialog_1').ej2_instances[0];
        dialogObj.hide();
        dialogObj1.hide();
    }
    var initial = true;
    function dataBound(args) {
        this.autoFitColumns();
        //if (initial == true) {
        //    this.groupModule.collapseAll();
        //    initial = false;
        //}
        console.log(args);
    }

    function commandClick(args) {
        console.log(args);
        if (args.commandColumn.type == "Edit") {
            var params_ = JSON.stringify(args.rowData);  // display row data
            window.location = "@Url.Content("~")/GL/Edit?Id=" + args.rowData.Id;
            @*$.ajax({
                url: "/?handler=EditAccountkj&Guid_=" + params_.Id,
                async: true,
                type: "GET",
                data: "",
                success: function (data) {
                    console.log(data);
                    //window.location = "@Url.Content("~")/COA/Edit";
                },
                error: function (err) {
                    console.log(err);
                }
            })*@
        }
        else if (args.commandColumn.type == "Copy") {
            this.copy(false);
        }
    }
</script>