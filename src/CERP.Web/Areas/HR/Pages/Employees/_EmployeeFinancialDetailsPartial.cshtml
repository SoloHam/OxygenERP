@using CERP.App;
@using Syncfusion.EJ2.Grids
@using CERP.HR.EMPLOYEE.RougeDTOs
@using CERP.HR.Employees.DTOs;
@{
    bool IsEditing = (bool)ViewData["IsEditing"];
    Employee_Dto employee = IsEditing ? Model.EmployeeToEdit : null;

    List<GridColumn> basicSalaryColumns = (List<GridColumn>)ViewData["basicSalaryColumns"];
    FinancialDetails fd = (IsEditing == true) ? (FinancialDetails)Model.FinancialDetails : null;

    IList<BasicSalaryRDTO> basicSalaryDS = (IsEditing == true) ? fd.BasicSalaries : new List<BasicSalaryRDTO>();

    List<DictionaryValue> allowanceTypes = (List<DictionaryValue>)ViewData["allowanceTypes"];
    List<GridColumn> allowancesColumns = (List<GridColumn>)ViewData["allowancesColumns"];
    IList<AllowanceRDTO> allowancesDS = (IsEditing == true) ? fd.AllowancesDetails : new List<AllowanceRDTO>();

    List<DictionaryValue> eosbTypes = (List<DictionaryValue>)ViewData["eosbTypes"];
    List<DictionaryValue> siTypes = (List<DictionaryValue>)ViewData["siTypes"];

    List<DictionaryValue> banks = (List<DictionaryValue>)ViewData["banks"];
    List<GridColumn> banksColumns = (List<GridColumn>)ViewData["banksColumns"];
    IList<BanksRDTO> banksDS = (IsEditing == true) ? fd.Banks : new List<BanksRDTO>();
}
<script>
    $(document).ready(function () {
        $('#addAllowanceBtnSection').on('click', function () {
            var isCollapsed = $('#form-step-3-2').css('display') == 'none';

            if (isCollapsed) {
                $('#addAllowanceBtnSection').slideUp(200);
                $('#form-step-3-2').slideDown(200);
                setTimeout(function () { $('#addAllowanceBtn', '#addAllowanceBtnSection').html('<i class="fa fa-arrow-up p-r-5"></i> Cancel Add') }, 200)
                $('#addAllowanceBtnSection').slideDown(200);
            } else {
                $('#addAllowanceBtnSection').slideUp(200);
                $('#form-step-3-2').slideUp(200);
                setTimeout(function () { $('#addAllowanceBtn', '#addAllowanceBtnSection').html('<i class="fa fa-plus p-r-5"></i> Add Allowance') }, 200)
                $('#addAllowanceBtnSection').slideDown(200);
            }
        });
        $('#addBankBtnSection').on('click', function () {
            var isCollapsed = $('#form-step-3-3').css('display') == 'none';

            if (isCollapsed) {
                $('#addBankBtnSection').slideUp(200);
                $('#form-step-3-3').slideDown(200);
                setTimeout(function () { $('#addBankBtn', '#addBankBtnSection').html('<i class="fa fa-arrow-up p-r-5"></i> Cancel Add') }, 200)
                $('#addBankBtnSection').slideDown(200);
            } else {
                $('#addBankBtnSection').slideUp(200);
                $('#form-step-3-3').slideUp(200);
                setTimeout(function () { $('#addBankBtn', '#addBankBtnSection').html('<i class="fa fa-plus p-r-5"></i> Add Bank') }, 200)
                $('#addBankBtnSection').slideDown(200);
            }
        });
    })
</script>
<div class="panel-body" style="padding-bottom:0">
    <div class="col-lg-12 padding-right-0">

        <div class="m-b-20 m-t-0">
            <h2>Financial Details</h2>
            <p>
                Provide fincancial details of the employee
            </p>
        </div>

        <ejs-grid id="BasicSalariesGrid" width="auto" dataSource="@basicSalaryDS" enableAutoFill="true" columns="@basicSalaryColumns"
                  dataBound="dataBoundResponsive"commandClick="commandClick" dataBound="dataBoundResponsive" actionComplete="actionComplete"
                  allowExcelExport="true" allowGrouping="false" allowPdfExport="true"
                  hierarchyPrintMode="Expanded" allowSelection="true" allowFiltering="true"
                  allowSorting="true" allowMultiSorting="true" gridLines="Horizontal"
                  toolbarClick="toolbarClick" toolbar="@ViewData["initialToolBar"]"
                  allowPaging="true" allowResizing="true">

            <e-grid-filterSettings type="CheckBox"></e-grid-filterSettings>
            <e-grid-editSettings showDeleteConfirmDialog="true" showConfirmDialog="true" allowAdding="true" allowDeleting="true" allowEditing="true"></e-grid-editSettings>
            <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
            <e-grid-pagesettings pageCount="5" pageSizes="@(new string[] { "5", "10" , "20", "All" })"></e-grid-pagesettings>
        </ejs-grid>

        @if (true)//(!IsEditing)
        {

            <div id="form-step-3-1" role="form" data-toggle="validator">
                <div id="fdGeneralInfo" class="row m-t-20">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="margin-bottom-5 fontSize-15">Social Security Number</label>
                            <input type="number" id="socialInsuranceId" name="SocialInsuranceId" min="01" value="@(IsEditing? employee.SocialInsuranceId : "")" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="margin-bottom-5 fontSize-15">Indemnity</label>

                            <select id="eosbTypeId" name="IndemnityTypeId" class="form-control" required>
                                <option></option>
                                @for (int i = 0; i < eosbTypes.Count; i++)
                                {
                                    @: <option value="@eosbTypes[i].Id" data-value="@eosbTypes[i].Value" @(IsEditing && employee.IndemnityTypeId != null && employee.IndemnityTypeId == eosbTypes[i].Id ? "selected" : "")>@eosbTypes[i].Value</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="margin-bottom-5 fontSize-15">Social Insurance</label>

                            <select id="sITypeId" name="SITypeId" class="form-control" required>
                                <option></option>
                                @for (int i = 0; i < siTypes.Count; i++)
                                {
                                    @: <option value="@siTypes[i].Id" data-value="@siTypes[i].Value" @(IsEditing && employee.SITypeId != null &&  employee.SITypeId == siTypes[i].Id ? "selected" : "")>@siTypes[i].Value</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row m-t-20">
                    <div class="col-lg-4 col-sm-6 col-12">
                        <div class="form-group">
                            <label class="margin-bottom-5 fontSize-15">Basic Salary</label>
                            <input type="number" id="basicSalary" name="BasicSalary" min="01" @*value="@(empInfo!=null? empInfo.BASIC_SALARY : 0)"*@ class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-6 col-12">
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5">From Date:</label>
                                <input type="text" id="bsFromDate" name="BasicSalaryFromDate" @*value="@(empInfo!=null? empInfo.ID_ISSUED_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                            </div>
                        </div>
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5 pull-right ">Hijri date</label>
                                <input type="text" id="bsFromHDate" name="BasicSalaryFromHDate" @*value="@(empInfo!=null? empInfo.ID_ISSUED_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline DatePickerHijri">
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-6 col-12">
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5">End Date:</label>
                                <input type="text" id="bsToDate" name="BasicSalaryEndDate" @*value="@(empInfo!=null? empInfo.ID_END_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                            </div>
                        </div>
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5 pull-right ">Hijri date</label>
                                <input type="text" id="bsToHDate" name="BasicSalaryEndHDate" @*value="@(empInfo!=null? empInfo.ID_END_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline   DatePickerHijri">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <button id="submitBasicSalary" type="button" class="btn btn-primary btn-block">Commit Salary</button>
                    </div>
                </div>
            </div>
        }

        <div id="allowancesSection">
            <hr />

            <div class="m-b-20 m-t-0">
                <h2>Allowances Details</h2>
                <p>
                    Provide allowances details of the employee
                </p>
            </div>
            <div id="addAllowanceBtnSection" class="row" style="margin-bottom: 10px">
                <div class="col-lg-12">
                    <button id="addAllowanceBtn" type="button" class="btn btn-primary btn-block"><i class="fa fa-plus p-r-5"></i> Add Allowance</button>
                </div>
            </div>
            <div id="form-step-3-2" role="form" data-toggle="validator" style="display:none">
                <div class="row">
                    <div class="col-lg-4 col-sm-6 col-12">
                        <div class="form-group">
                            <label class="margin-bottom-5 m-t-20  fontSize-15">Allowance Type:</label>
                            <select id="allowanceType" name="AllowanceType" @*value="@(empInfo!=null? empInfo.BASIC_SALARY : 0)"*@ class="form-control" required>
                                <option></option>
                                @for (int i = 0; i < allowanceTypes.Count; i++)
                                {
                                    <option value="@allowanceTypes[i].Id" data-value="@allowanceTypes[i].Value">@allowanceTypes[i].Value</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-6 col-12">
                        <div class="form-group">
                            <label class="margin-bottom-5 m-t-20  fontSize-15">% of Basic Salary:</label>
                            <input type="number" step="any" @*max="100"*@ id="percOfBasicSalary" name="PercOfBasicSalary" min="0" @*value="@(empInfo!=null? empInfo.BASIC_SALARY : 0)"*@ class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-6 col-12">
                        <div class="form-group">
                            <label class="margin-bottom-5 m-t-20  fontSize-15">Amount:</label>
                            <input type="number" step="any" id="basicSalaryAmount" name="BasicSalaryAmount" min="0" @*value="@(empInfo!=null? empInfo.BASIC_SALARY : 0)"*@ class="form-control" required>
                        </div>
                    </div>

                    @*</div>
                        <div class="row">*@
                    <div class="col-lg-4 col-sm-6 col-12">
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5">From Date:</label>
                                <input type="text" id="basicSalaryFromDate" name="BasicSalaryFromDate" @*value="@(empInfo!=null? empInfo.ID_ISSUED_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                            </div>
                        </div>
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5 pull-right ">Hijri date</label>
                                <input type="text" id="basicSalaryFromHDate" name="BasicSalaryFromHDate" @*value="@(empInfo!=null? empInfo.ID_ISSUED_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline DatePickerHijri">
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-6 col-12">
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5">End Date:</label>
                                <input type="text" id="basicSalaryEndDate" name="BasicSalaryEndDate" @*value="@(empInfo!=null? empInfo.ID_END_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                            </div>
                        </div>
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5 pull-right ">Hijri date</label>
                                <input type="text" id="basicSalaryEndHDate" name="BasicSalaryEndHDate" @*value="@(empInfo!=null? empInfo.ID_END_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline   DatePickerHijri">
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-sm-6 col-12">
                        <label class="control-label m-b-5">Please confirm the details before commiting</label>
                        <button id="submitAllowance" type="button" class="btn btn-primary btn-block">Commit Allowance</button>
                    </div>
                </div>
                <hr />
            </div>

            <ejs-grid id="AllowancesGrid" dataSource="@allowancesDS" enableAutoFill="true" columns="@allowancesColumns"
                      dataBound="dataBoundResponsive"commandClick="commandClick"
                      allowExcelExport="true" height="100%" allowPdfExport="true"
                      hierarchyPrintMode="Expanded" allowSelection="true" allowFiltering="true"
                      allowSorting="true" allowMultiSorting="true" gridLines="Horizontal"
                      toolbarClick="toolbarClick" toolbar="@ViewData["initialToolBar"]"
                      allowPaging="true" allowResizing="true">

                <e-grid-filterSettings type="CheckBox"></e-grid-filterSettings>
                <e-grid-editSettings showDeleteConfirmDialog="true" showConfirmDialog="true" allowAdding="false" allowDeleting="true" allowEditing="true"></e-grid-editSettings>
                <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
                <e-grid-pagesettings pageCount="5" pageSizes="@(new string[] { "5", "10" , "20", "All" })"></e-grid-pagesettings>
            </ejs-grid>


        </div>

        <hr />

        <div class="m-b-20 m-t-0">
            <h2>Bank Details</h2>
            <p>
                Provide bank details of the employee
            </p>
        </div>
        <div id="addBankBtnSection" class="row" style="margin-bottom: 10px">
            <div class="col-lg-12">
                <button id="addBankBtn" type="button" class="btn btn-primary btn-block"><i class="fa fa-plus p-r-5"></i> Add Bank</button>
            </div>
        </div>
        <div id="form-step-3-3" role="form" data-toggle="validator" style="display:none">
            <div class="row m-t-20">
                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="margin-bottom-5  fontSize-15">Bank:</label>
                        <select id="bankId" name="BankId" class="form-control" required>
                            <option></option>
                            @for (int i = 0; i < banks.Count; i++)
                            {
                                <option value="@banks[i].Id" data-value="@banks[i].Value">@banks[i].Value</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="margin-bottom-5  fontSize-15">Account Title:</label>
                        <input type="text" id="bankAccountTitle" name="BankAccountTitle" min="0" @*value="@(empInfo!=null? empInfo.BANK_ACCOUNT_TITLE : "")"*@ class="form-control" required>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="margin-bottom-5  fontSize-15">Account No:</label>
                        <input type="text" id="bankAccountNo" name="BankAccountNo" min="0" @*value="@(empInfo!=null? empInfo.BANK_ACCOUNT_NO : "")"*@ class="form-control" required>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="margin-bottom-5  fontSize-15">IBAN #:</label>
                        <input type="text" id="bankIBAN" name="BankIBAN" min="0" @*value="@(empInfo!=null? empInfo.BANK_IBAN : "")"*@ class="form-control" required>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4 col-sm-6 col-12">
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5">From Date:</label>
                            <input type="text" id="bankFromDate" name="BasicSalaryFromDate" @*value="@(empInfo!=null? empInfo.ID_ISSUED_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                        </div>
                    </div>
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5 pull-right ">Hijri date</label>
                            <input type="text" id="bankFromHDate" name="BasicSalaryFromHDate" @*value="@(empInfo!=null? empInfo.ID_ISSUED_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline DatePickerHijri">
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-sm-6 col-12">
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5">End Date:</label>
                            <input type="text" id="bankToDate" name="BasicSalaryEndDate" @*value="@(empInfo!=null? empInfo.ID_END_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                        </div>
                    </div>
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5 pull-right ">Hijri date</label>
                            <input type="text" id="bankToHDate" name="BasicSalaryEndHDate" @*value="@(empInfo!=null? empInfo.ID_END_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline   DatePickerHijri">
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <label class="control-label m-b-5">Please confirm the details before commiting</label>
                    <button id="submitBank" type="button" class="btn btn-primary btn-block">Commit Bank</button>
                </div>
            </div>
            <hr />
        </div>

        <ejs-grid id="BanksGrid" width="auto" dataSource="@banksDS" enableAutoFill="true" columns="@banksColumns"
                  dataBound="dataBoundResponsive"commandClick="commandClick" dataBound="dataBoundResponsive" actionComplete="actionComplete"
                  allowExcelExport="true" allowGrouping="false" allowPdfExport="true"
                  hierarchyPrintMode="Expanded" allowSelection="true" allowFiltering="true"
                  allowSorting="true" allowMultiSorting="true" gridLines="Horizontal"
                  toolbarClick="toolbarClick" toolbar="@ViewData["initialToolBar"]"
                  allowPaging="true" allowResizing="true">

            <e-grid-filterSettings type="CheckBox"></e-grid-filterSettings>
            <e-grid-editSettings showDeleteConfirmDialog="true" showConfirmDialog="true" allowAdding="true" allowDeleting="true" allowEditing="true"></e-grid-editSettings>
            <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
            <e-grid-pagesettings pageCount="5" pageSizes="@(new string[] { "5", "10" , "20", "All" })"></e-grid-pagesettings>
        </ejs-grid>


    </div>
</div>

<script>
    $(document).ready(function () {
        var grid = $("#BasicSalariesGrid")[0].ej2_instances[0];
        if (grid.dataSource.length > 0)
            curBasicSalary = grid.dataSource[grid.dataSource.length - 1].Salary;

        $("#percOfBasicSalary").on("change keyup", function () {
                var perc = $(this).val();
                //if (perc > 0 && perc < 101) {
                var basicSalary = curBasicSalary * (perc / 100);
                $("#basicSalaryAmount").val(basicSalary.toFixed(2));
                //}
            });
            $("#basicSalaryAmount").on("change keyup", function () {
                var salary = $(this).val();
                //if (perc > 0 && perc < 101) {
                var percBasicSalary = (salary / curBasicSalary) * 100;
                $("#percOfBasicSalary").val(percBasicSalary.toFixed(2));
                //}
            });
    })

    function toolbarClick(args) {
        var gridObj = $("#BasicSalariesGrid")[0].ej2_instances[0];
        console.log(args.item);
        if (args.item.id === 'BasicSalariesGrid_pdfexport') {
            gridObj.pdfExport();
        }
        if (args.item.id === 'BasicSalariesGrid_excelexport') {
            gridObj.excelExport();
        }
        if (args.item.id === 'BasicSalariesGrid_csvexport') {
            gridObj.csvExport();
        }
        if (this.getSelectedRecords().length > 0) {
            var withHeader = false;
            if (args.item.id === 'copyHeader') {
                withHeader = true;
            }
            this.copy(withHeader);
        } else {
            if (args.item.id === 'copyHeader') {
                var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
                dialogObj.show();
            }
            else if (args.item.id === 'copy') {
                var dialogObj = document.getElementById('alert_dialog_1').ej2_instances[0];
                dialogObj.show();
            }
        }
        if (args.item.id === 'showActions') {
            gridObj.toolbar = [{ text: "Hide Actions", tooltipText: "Actions", prefixIcon: "e-custom-hide-actions", id: "hideActions" }, { text: "Toggle Grouping", tooltipText: "Grouping", prefixIcon: "e-custom-group-toggle", id: "toggleGrouping" }, { text: "Toggle Detailed", tooltipText: "Toggle Detailed", prefixIcon: "e-toggledetailed", id: "toggleDetailed" }, { text: "ExcelExport", tooltipText: "Excel Export", prefixIcon: "e-excelexport", id: "excelexport", align: 'Right' }, "CsvExport", "Print", "Search",{ text: "Copy", tooltipText: "Copy", prefixIcon: "e-copy", id: "copy" }, "Search", { text: "Copy With Header", tooltipText: "Copy With Header", prefixIcon: "e-copy", id: "copyHeader" }, "ColumnChooser"];
	gridObj.refresh();
        }
        if (args.item.id === 'hideActions') {
            gridObj.toolbar = [{ text: "Show Actions", tooltipText: "Actions", prefixIcon: "e-custom-show-actions", id: "showActions" }, "Search", "ColumnChooser"];
            gridObj.showColumnChooser = true;
            gridObj.refresh();
        }
        if (args.item.id === 'toggleGrouping') {
            gridObj.allowGrouping = !gridObj.allowGrouping;
            gridObj.refresh();
        }
        if (args.item.id === 'toggleDetailed') {
            var visCount = 0;
            for (var i = 0; i < gridObj.columns.length; i++) {
                if (gridObj.columns[i].visible) visCount++;
            }
            if (visCount == gridObj.columns.length) {
                for (var i = 0; i < gridObj.columns.length; i++) {
                    var col = gridObj.columns[i];
                    if (typeof col.customAttributes != 'undefined' && typeof col.customAttributes.id != 'undefined' && col.customAttributes.id == 'detailed')
                        gridObj.showHider.hide(col.headerText, 'headerText');
                    else if(col.showInColumnChooser)
                        gridObj.showHider.show(col.headerText, 'headerText');
                }
            }
            else {
                for (var i = 0; i < gridObj.columns.length; i++) {
                    var col = gridObj.columns[i];
	    if(col.showInColumnChooser)
                         gridObj.showHider.show(col.headerText, 'headerText');
                }
            }
        }
    }
    function alertBtnClick() {
        var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
        var dialogObj1 = document.getElementById('alert_dialog_1').ej2_instances[0];
        dialogObj.hide();
        dialogObj1.hide();
    }
    var curBasicSalary = 0;
    var initial = true;
    function dataBound(args) {
        //this.autoFitColumns();
        //if (initial == true) {
        //    this.groupModule.collapseAll();
        //    initial = false;
        //}
        console.log(args);
    }

    function actionComplete(args) {
        var grid = $("#BasicSalariesGrid")[0].ej2_instances[0];
        if (grid.dataSource.length == 0) {
            $("#allowancesSection").slideUp();
        }
        else {
            $("#allowancesSection").slideDown();

            curBasicSalary = grid.dataSource[grid.dataSource.length - 1].Salary;
            console.log(curBasicSalary);
        }
    }
    function commandClick(args) {
        if (args.commandColumn.type == "Edit") {
            var params_ = JSON.stringify(args.rowData);  // display row data
            window.location = "@Url.Content("~")/GL/Edit?Id=" + args.rowData.Id;
            @*$.ajax({
                url: "/?handler=EditAccountkj&Guid_=" + params_.Id,
                async: true,
                type: "GET",
                data: "",
                success: function (data) {
                    console.log(data);
                    //window.location = "@Url.Content("~")/COA/Edit";
                },
                error: function (err) {
                    console.log(err);
                }
            })*@
        }
        else if (args.commandColumn.type == "Copy") {
            this.copy(false);
        }
    }
</script>