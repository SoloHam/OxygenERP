@using CERP.App;
@using Syncfusion.EJ2.Grids;
@using CERP.HR.EMPLOYEE.RougeDTOs;
@{
    List<DictionaryValue> birthPlaces = (List<DictionaryValue>)ViewData["birthPlaces"];
    List<DictionaryValue> nationalities = (List<DictionaryValue>)ViewData["nationalities"];
    List<DictionaryValue> genders = (List<DictionaryValue>)ViewData["genders"];

    DependantsDetail dependantsDetail = ((bool)ViewData["IsEditing"] == true) ? (DependantsDetail)Model.DependantsDetail : null;

    List<DictionaryValue> dependantRelationshipTypes = (List<DictionaryValue>)ViewData["dependantRelationshipTypes"];
    IList<Dependant> dependantsDS = ((bool)ViewData["IsEditing"] == true) ? dependantsDetail.Dependants : new List<Dependant>();
    List<GridColumn> dependantsColumns = (List<GridColumn>)ViewData["dependantsColumns"];

    List<DictionaryValue> idTypes = (List<DictionaryValue>)ViewData["idTypes"];
    List<DictionaryValue> idIssuers = (List<DictionaryValue>)ViewData["idIssuers"];

    List<GridColumn> DependantsIdsListColumns = (List<GridColumn>)ViewData["DependantsIdsListColumns"];
    IList<PhysicalId<int>> DependantIdsListDs = ((bool)ViewData["IsEditing"] == true)? dependantsDetail.PhysicalIds : new List<PhysicalId<int>>();
}

@section scripts{
}
<script>
    $(document).ready(function () {
        $('#addDependantsSectionBtn').on('click', function () {
            var isCollapsed = $('#form-step-5-1').css('display') == 'none';

            if (isCollapsed) {
                $('#addDependantsSection').slideUp(200);
                $('#form-step-5-1').slideDown(200);
                setTimeout(function () { $('#addDependantsSectionBtn', '#addDependantsSection').html('<i class="fa fa-arrow-up p-r-5"></i> Cancel Add') }, 200)
                $('#addDependantsSection').slideDown(200);
            } else {
                $('#addDependantsSection').slideUp(200);
                $('#form-step-5-1').slideUp(200);
                setTimeout(function () { $('#addDependantsSectionBtn', '#addDependantsSection').html('<i class="fa fa-plus p-r-5"></i> Add Dependant') }, 200)
                $('#addDependantsSection').slideDown(200);
            }
        });
        $('#addDependantsIdsSectionBtn').on('click', function () {
            var isCollapsed = $('#form-step-5-2').css('display') == 'none';

            if (isCollapsed) {
                $('#addDependantsIdsSection').slideUp(200);
                $('#form-step-5-2').slideDown(200);
                setTimeout(function () { $('#addDependantsIdsSectionBtn', '#addDependantsIdsSection').html('<i class="fa fa-arrow-up p-r-5"></i> Cancel Add') }, 200)
                $('#addDependantsIdsSection').slideDown(200);
            } else {
                $('#addDependantsIdsSection').slideUp(200);
                $('#form-step-5-2').slideUp(200);
                setTimeout(function () { $('#addDependantsIdsSectionBtn', '#addDependantsIdsSection').html('<i class="fa fa-plus p-r-5"></i> Add Dependants IDs') }, 200)
                $('#addDependantsIdsSection').slideDown(200);
            }
        });
    })
</script>

<div class="m-l-20 m-t-0">
    <h2>Dependants Details</h2>
    <p>
        Provide dependants details of the employee
    </p>
</div>
<hr class="m-b-0" />
<div class="panel-body" style="padding-bottom:0">
    <div class="control-section ">
        <div id="addDependantsSection" class="row" style="margin-bottom:10px;">
            <div class="col-lg-12">
                <button id="addDependantsSectionBtn" type="button" class="btn btn-primary btn-block"><i class="fa fa-plus p-r-5"></i> Add Dependant</button>
            </div>
        </div>
        <div id="form-step-5-1" role="form" data-toggle="validator" style="display:none;margin-bottom:10px;">
            <div class="row m-t-20">
                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="m-b-5  control-label">Relation Type:</label>
                        <div>
                            <select id="relationshipTypeId" name="RelationshipTypeId" class="form-control" required>
                                <option selected="" hidden=""></option>
                                @for (int i = 0; i < dependantRelationshipTypes.Count; i++)
                                {
                                    <option value="@dependantRelationshipTypes[i].Id" data-value="@dependantRelationshipTypes[i].Value">@dependantRelationshipTypes[i].Value</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5">Dependant Name</label>
                            <input type="text" id="dependantName" name="DependantName" @*value="@(empInfo!=null? empInfo.PASSPORT_ISSUED_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left" required>
                        </div>
                    </div>
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5 pull-right ">(Arabic)</label>
                            <input type="text" id="dependantNameLocalized" name="DependantNameLocalized" @*value="@(empInfo!=null? empInfo.ID_ISSUED_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline">
                        </div>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5">Birth Date:</label>
                            <input type="text" id="dependantDob" name="DOB" style="width: 100% !important; cursor: default;" class="text-left form-control inline pull-left DatePicker is-calendarsPicker" autocomplete="off" required>
                        </div>
                    </div>
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5 pull-right ">(Hijri date)</label>
                            <input type="text" id="dobH" name="DOB_H" style="width:100% !important" class="text-right form-control inline DatePickerHijri is-calendarsPicker" autocomplete="off">
                        </div>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="m-b-5  control-label">Birth Place:</label>
                        <div>
                            <select id="dependantPOB" name="POB_ID" class="form-control" required>
                                <option></option>
                                @for (int i = 0; i < birthPlaces.Count; i++)
                                {
                                    <option value="@birthPlaces[i].Id" data-value="@birthPlaces[i].Value">@birthPlaces[i].Value</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="m-b-5  control-label">Nationality:</label>
                        <div>
                            <select id="dependantNationalityId" name="NationalityId" class="form-control" required>
                                <option></option>
                                @for (int i = 0; i < nationalities.Count; i++)
                                {
                                    <option value="@nationalities[i].Id" data-value="@nationalities[i].Value">@nationalities[i].Value</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="m-b-5  control-label">Gender:</label>
                        <div>
                            <select id="dependantGenderId" name="GenderId" class="form-control" required>
                                <option selected="" hidden=""></option>
                                @for (int i = 0; i < genders.Count; i++)
                                {
                                    <option value="@genders[i].Id" data-value="@genders[i].Value">@genders[i].Value</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>

            </div>
            <div class="clearfix margin-5"></div>

            <div class="row">
                <div class="col-lg-12">
                    <button id="submitAddDependant" type="button" class="btn btn-primary btn-block">Add Dependant</button>
                </div>
            </div>

        </div>
        <ejs-grid id="DependantsGrid" dataSource="@dependantsDS" enableAutoFill="true" columns="@dependantsColumns"
                  dataBound="dataBoundResponsive"commandClick="commandClick"
                  allowExcelExport="true" height="100%"allowPdfExport="true"
                  hierarchyPrintMode="Expanded" allowSelection="true" allowFiltering="true"
                  allowSorting="true" allowMultiSorting="true" gridLines="Horizontal"
                  toolbarClick="toolbarClick" actionComplete="actionCompleteDependant" showColumnChooser="true" toolbar="@ViewData["initialToolBar"]"
                  
                  allowPaging="true" allowResizing="true">

            <e-grid-filterSettings type="CheckBox"></e-grid-filterSettings>
            <e-grid-editSettings showDeleteConfirmDialog="true" showConfirmDialog="true" allowAdding="true" allowDeleting="true" allowEditing="false"></e-grid-editSettings>
            <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
            <e-grid-pagesettings pageCount="5" pageSizes="@(new string[] { "5", "10" , "20", "All" })"></e-grid-pagesettings>
        </ejs-grid>
    </div>

    

    <div id="dependantsDocumentsSection" class="col-lg-12 padding-right-0 m-t-20">

        <div class="col-lg-12 m-t-20">
            <h3 class="m-t-0">Dependants IDs</h3>
            <div id="addDependantsIdsSection" class="row" style="margin-bottom:10px;">
                <div class="col-lg-12">
                    <button id="addDependantsIdsSectionBtn" type="button" class="btn btn-primary btn-block"><i class="fa fa-plus p-r-5"></i> Add Dependants IDs</button>
                </div>
            </div>
            <div id="form-step-5-2" role="form" data-toggle="validator" style="display:none;margin-bottom:10px;">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label class="margin-bottom-5  control-label">Dependant:</label>
                            <select id="dependantId" name="DependantID" class="form-control" required>
                                <option></option>
                                @for (int i = 0; i < dependantsDS.Count; i++)
                                {
                                    <option value="@dependantsDS[i].Id" data-value="@dependantsDS[i].Name">@dependantsDS[i].Name</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row m-t-20">

                    <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                        <div class="form-group">
                            <label class="margin-bottom-5  control-label">ID Type:</label>
                            <select id="dependantIdTypeId" name="DependantIDTypeId" class="form-control" required>
                                <option></option>
                                @for (int i = 0; i < idTypes.Count; i++)
                                {
                                    <option value="@idTypes[i].Id" data-value="@idTypes[i].Value">@idTypes[i].Value</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                        <div class="form-group">
                            <label class="margin-bottom-5  control-label">ID No:</label>
                            <input type="text" id="dependantIdNo" name="DependantIDNo" @*value="@(empInfo!=null? empInfo.ID_NO : "")"*@ class="form-control" required>
                        </div>
                    </div>


                    <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                        <div class="form-group">
                            <label class="margin-bottom-5  control-label">Issued From:</label>
                            <select id="dependantIdIssuedFromId" name="DependantIDIssuedFromId" class="form-control" required>
                                <option></option>
                                @for (int i = 0; i < idIssuers.Count; i++)
                                {
                                    <option value="@idIssuers[i].Id" data-value="@idIssuers[i].Value">@idIssuers[i].Value</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                        <div class="form-group">
                            <label class="margin-bottom-5  control-label">Job Title on ID:</label>
                            <input type="text" id="dependantIdJobTitle" name="DependantIDJobTitle" @*value="@(empInfo!=null? empInfo.ID_JOB_TITLE_EN : "")"*@ class="form-control" required>
                        </div>
                    </div>

                    @*<div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <label class="margin-bottom-5  control-label">Job Title in ID (Arabic):</label>
                    <div>
                        <input type="text" id="ID_JOB_TITLE_EN_AR" name="ID_JOB_TITLE_EN_AR" value="@(empInfo!=null? empInfo.ID_JOB_TITLE_EN_AR : "")" class="form-control">
                    </div>
                </div>*@
                </div>

                <div class="clearfix margin-5"></div>
                <div class="row">

                    <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                        <div class="form-group">
                            <label class="margin-bottom-5  control-label">Sponsor:</label>
                            <input type="text" id="dependantIdSponsorName" name="DependantIDSponsorName" @*value="@(empInfo!=null? empInfo.ID_SPONSOR_NAME_EN : "")"*@ class="form-control">
                        </div>
                    </div>
                    @*<div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <label class="margin-bottom-5  control-label">Sponsor (Arabic):</label>
                    <div>
                        <input type="text" id="ID_SPONSOR_NAME_AR" name="ID_SPONSOR_NAME_AR" value="@(empInfo!=null? empInfo.ID_SPONSOR_NAME_AR : "")" class="form-control">
                    </div>
                </div>*@

                    <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5">Issued Date:</label>
                                <input type="text" id="dependantIdIssuedDate" name="DependantIDIssueDate" @*value="@(empInfo!=null? empInfo.ID_ISSUED_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                            </div>
                        </div>
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5 pull-right ">Hijri date</label>
                                <input type="text" id="dependantIdIssuedHDate" name="DependantIDIssuedHDate" @*value="@(empInfo!=null? empInfo.ID_ISSUED_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline DatePickerHijri">
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5">End Date:</label>
                                <input type="text" id="dependantIdEndDate" name="DependantIDEndDate" @*value="@(empInfo!=null? empInfo.ID_END_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                            </div>
                        </div>
                        <div class="col-sm-6" style="padding:0">
                            <div class="form-group">
                                <label class="control-label m-b-5 pull-right ">Hijri date</label>
                                <input type="text" id="dependantIdEndHDate" name="DependantIDEndHDate" @*value="@(empInfo!=null? empInfo.ID_END_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline   DatePickerHijri">
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6 col-sm-6 col-12">

                        @*@if (empInfo != null && empInfo.ID_ATTACHMENT != null)
                    {
                        <a href='@(Url.Content("~")+"Files\\"+ Model.EMP_ID+"\\"+Convert.ToString(empInfo.ID_ATTACHMENT))' target="_blank" class="margin-bottom-5  pull-right text-right">
                            View File
                        </a>
                    }*@
                        <div class="form-group">
                            <label class="margin-bottom-5  control-label">Updated ID Copy:</label>
                            <input type="file" id="dependantIdCard" name="DependantIDCard" class="form-control " />
                        </div>
                        <input type="hidden" id="dependantIdAttachment" name="DependantIDAttachment" @*value="@(empInfo!=null? empInfo.ID_ATTACHMENT : "")"*@ class="form-control">



                    </div>

                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <button id="submitDependantPhysicalId" type="button" class="btn btn-primary btn-block">Add ID</button>
                    </div>
                </div>

            </div>
            <ejs-grid id="DependantsPhysicalIdsGrid" dataSource="@DependantIdsListDs" enableAutoFill="true" columns="@DependantsIdsListColumns"
                      dataBound="dataBoundResponsive"commandClick="commandClick"
                      allowExcelExport="true" height="100%"allowPdfExport="true"
                      hierarchyPrintMode="Expanded" allowSelection="true" allowFiltering="true"
                      allowSorting="true" allowMultiSorting="true" gridLines="Horizontal"
                      toolbarClick="toolbarClickDependantIds" showColumnChooser="true" toolbar="@ViewData["initialToolBar"]"
                      allowPaging="true" allowResizing="true">

                <e-grid-filterSettings type="CheckBox"></e-grid-filterSettings>
            <e-grid-editSettings showDeleteConfirmDialog="true" mode="Dialog" showConfirmDialog="true" allowAdding="false" allowDeleting="true" allowEditing="false" newRowPosition="Bottom"></e-grid-editSettings>
                <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
                <e-grid-pagesettings pageCount="5" pageSizes="@(new string[] { "5", "10" , "20", "All" })"></e-grid-pagesettings>
            </ejs-grid>

            <hr />


        </div>

        @*<div class="col-lg-6 m-t-20">
                <h3 class="m-t-0">Dependants Passports</h3>
                <ejs-grid id="DependantsPassportIdsGrid" dataSource="@ViewData["PassportIdsListDS"]" enableAutoFill="true" columns="@PassportIdsListColumns"
                          dataBound="dataBoundResponsive"commandClick="commandClick"
                          allowExcelExport="true" height="100%"allowPdfExport="true"
                          hierarchyPrintMode="Expanded" allowSelection="true" allowFiltering="true"
                          allowSorting="true" allowMultiSorting="true" gridLines="Horizontal"
                          toolbarClick="toolbarClickDependantPassports" showColumnChooser="true" toolbar="@ViewData["initialToolBar"]" allowPaging="true" allowResizing="true">

                    <e-grid-filterSettings type="CheckBox"></e-grid-filterSettings>
            <e-grid-editSettings showDeleteConfirmDialog="true" mode="Dialog" showConfirmDialog="true" allowAdding="false" allowDeleting="true" allowEditing="false" newRowPosition="Bottom"></e-grid-editSettings>
                    <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
                    <e-grid-pagesettings pageCount="5" pageSizes="@(new string[] { "5", "10" , "20", "All" })"></e-grid-pagesettings>
                </ejs-grid>
                <hr />
                <div id="form-step-5-3" role="form" data-toggle="validator">
                    <div class="row m-t-20">


                        <div class="col-lg-3 col-md-6 col-sm-6 col-12">

                            <div class="form-group">
                                <label class="margin-bottom-5  control-label">Passport No:</label>
                                <input type="text" id="dependantPassportNo" name="DependantPassportNo" value="@(empInfo!=null? empInfo.PASSPORT_NO : "")" class="form-control" required>
                            </div>
                        </div>

                        <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                            <div class="form-group">
                                <label class="margin-bottom-5  control-label">Issued From:</label>
                                <select id="dependantPassportIssuedFromId" name="DependantPassportIssuedFromId" class="form-control" required>
                                    <option></option>
                                    @for (int i = 0; i < passportIssuers.Count; i++)
                                    {
                                        <option value="@passportIssuers[i].Id" data-value="@passportIssuers[i].Value">@passportIssuers[i].Value</option>
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                                <div class="form-group">
                                    <label class="margin-bottom-5  control-label">Job Title on Passport:</label>
                                    <input type="text" id="passportJobTitle" name="PassportJobTitle" value="@(empInfo!=null? empInfo.PASSPORT_JOB_TITLE_EN : "")" class="form-control" required>
                                </div>
                            </div>
                        <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                                <label class="margin-bottom-5  control-label">Job Title in Passport (Arabic):</label>
                                <div>
                                    <input type="text" id="PASSPORT_JOB_TITLE_AR" name="PASSPORT_JOB_TITLE_AR" value="@(empInfo!=null? empInfo.PASSPORT_JOB_TITLE_AR : "")" class="form-control">
                                </div>
                            </div>
                        <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                            <div class="col-sm-6" style="padding:0">
                                <div class="form-group">
                                    <label class="control-label m-b-5">Issued Date:</label>
                                    <input type="text" id="dependantPassportIssuedDate" name="DependantPassportIssuedDate" value="@(empInfo!=null? empInfo.PASSPORT_ISSUED_DATE : "")" style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                                </div>
                            </div>
                            <div class="col-sm-6" style="padding:0">
                                <div class="form-group">
                                    <label class="control-label m-b-5 pull-right ">Hijri date</label>
                                    <input type="text" id="dependantPassportIssuedHDate" name="DependantPassportIssuedHDate" value="@(empInfo!=null? empInfo.ID_ISSUED_DATE_H : "")" style="width:100% !important" class="text-right  form-control inline DatePickerHijri">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                            <div class="col-sm-6" style="padding:0">
                                <div class="form-group">
                                    <label class="control-label m-b-5">Expiry Date:</label>
                                    <input type="text" id="dependantPassportExpiryDate" name="DependantPassportEndDate" value="@(empInfo!=null? empInfo.PASSPORT_EXPIRY_DATE : "")" style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                                </div>
                            </div>
                            <div class="col-sm-6" style="padding:0">
                                <div class="form-group">
                                    <label class="control-label m-b-5 pull-right ">Hijri date</label>
                                    <input type="text" id="dependantPassportExpiryHDate" name="DependantPassportExpiryHDate" value="@(empInfo!=null? empInfo.PASSPORT_EXPIRY_DATE_H : "")" style="width:100% !important" class="text-right  form-control inline   DatePickerHijri">
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="clearfix margin-5"></div>
                    <div class="row">
                        <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                            @if (empInfo != null && empInfo.PASSPORT_ATTACHMENT != null)
                                {
                                    <a href='@(Url.Content("~")+"Files\\"+ Model.EMP_ID+"\\"+Convert.ToString(empInfo.PASSPORT_ATTACHMENT))' target="_blank" class="margin-bottom-5  pull-right text-right">
                                        View File
                                    </a>
                                }
                            <div class="form-group">
                                <label class="margin-bottom-5  control-label">Updated Passport Copy:</label>
                                <input type="file" id="dependantPassport" name="Passport" class="form-control" />
                            </div>
                            <input type="hidden" id="dependantPassportAttachment" name="DependantPassportAttachment" value="@(empInfo!=null? empInfo.PASSPORT_ATTACHMENT : "")" class="form-control">



                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <button id="submitDependantPassportId" type="button" class="btn btn-primary btn-block">Add Passport</button>
                        </div>
                    </div>

                </div>
            </div>*@

        <div class="clearfix margin-5"></div>
    </div>
</div>

<script>

    function toolbarClickDependent(args) {
        var gridObj = document.getElementById("DependantsGrid").ej2_instances[0];
        if (args.item.id === 'DependantsGrid_pdfexport') {
            gridObj.pdfExport();
        }
        if (args.item.id === 'DependantsGrid_excelexport') {
            gridObj.excelExport();
        }
        if (args.item.id === 'DependantsGrid_csvexport') {
            gridObj.csvExport();
        }
        if (this.getSelectedRecords().length > 0) {
            var withHeader = false;
            if (args.item.id === 'copyHeader') {
                withHeader = true;
            }
            this.copy(withHeader);
        } else {
            if (args.item.id === 'copyHeader') {
                var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
                dialogObj.show();
            }
            else if (args.item.id === 'copy') {
                var dialogObj = document.getElementById('alert_dialog_1').ej2_instances[0];
                dialogObj.show();
            }
        }
        if (args.item.id === 'showActions') {
            gridObj.toolbar = [{ text: "Hide Actions", tooltipText: "Actions", prefixIcon: "e-custom-hide-actions", id: "hideActions" }, { text: "Toggle Grouping", tooltipText: "Grouping", prefixIcon: "e-custom-group-toggle", id: "toggleGrouping" }, { text: "Toggle Detailed", tooltipText: "Toggle Detailed", prefixIcon: "e-toggledetailed", id: "toggleDetailed" }, { text: "ExcelExport", tooltipText: "Excel Export", prefixIcon: "e-excelexport", id: "excelexport", align: 'Right' }, "CsvExport", "Print", "Search",{ text: "Copy", tooltipText: "Copy", prefixIcon: "e-copy", id: "copy" }, "Search", { text: "Copy With Header", tooltipText: "Copy With Header", prefixIcon: "e-copy", id: "copyHeader" }, "ColumnChooser"];
	gridObj.refresh();
        }
        if (args.item.id === 'hideActions') {
            gridObj.toolbar = [{ text: "Show Actions", tooltipText: "Actions", prefixIcon: "e-custom-show-actions", id: "showActions" }, "Search", "ColumnChooser"];
            gridObj.showColumnChooser = true;
            gridObj.refresh();
        }
        if (args.item.id === 'toggleGrouping') {
            gridObj.allowGrouping = !gridObj.allowGrouping;
            gridObj.refresh();
        }
        if (args.item.id === 'toggleDetailed') {
            var visCount = 0;
            for (var i = 0; i < gridObj.columns.length; i++) {
                if (gridObj.columns[i].visible) visCount++;
            }
            if (visCount == gridObj.columns.length) {
                for (var i = 0; i < gridObj.columns.length; i++) {
                    var col = gridObj.columns[i];
                    if (typeof col.customAttributes != 'undefined' && typeof col.customAttributes.id != 'undefined' && col.customAttributes.id == 'detailed')
                        gridObj.showHider.hide(col.headerText, 'headerText');
                    else if(col.showInColumnChooser)
                        gridObj.showHider.show(col.headerText, 'headerText');
                }
            }
            else {
                for (var i = 0; i < gridObj.columns.length; i++) {
                    var col = gridObj.columns[i];
	    if(col.showInColumnChooser)
                         gridObj.showHider.show(col.headerText, 'headerText');
                }
            }
        }
    }
    function toolbarClickDependantIds(args) {
        var gridObj = document.getElementById("DependantsPhysicalIdsGrid").ej2_instances[0];
        if (args.item.id === 'DependantsPhysicalIdsGrid_pdfexport') {
            gridObj.pdfExport();
        }
        if (args.item.id === 'DependantsPhysicalIdsGrid_excelexport') {
            gridObj.excelExport();
        }
        if (args.item.id === 'DependantsPhysicalIdsGrid_csvexport') {
            gridObj.csvExport();
        }
        if (this.getSelectedRecords().length > 0) {
            var withHeader = false;
            if (args.item.id === 'copyHeader') {
                withHeader = true;
            }
            this.copy(withHeader);
        } else {
            if (args.item.id === 'copyHeader') {
                var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
                dialogObj.show();
            }
            else if (args.item.id === 'copy') {
                var dialogObj = document.getElementById('alert_dialog_1').ej2_instances[0];
                dialogObj.show();
            }
        }
        if (args.item.id === 'showActions') {
            gridObj.toolbar = [{ text: "Hide Actions", tooltipText: "Actions", prefixIcon: "e-custom-hide-actions", id: "hideActions" }, { text: "Toggle Grouping", tooltipText: "Grouping", prefixIcon: "e-custom-group-toggle", id: "toggleGrouping" }, { text: "Toggle Detailed", tooltipText: "Toggle Detailed", prefixIcon: "e-toggledetailed", id: "toggleDetailed" }, { text: "ExcelExport", tooltipText: "Excel Export", prefixIcon: "e-excelexport", id: "excelexport", align: 'Right' }, "CsvExport", "Print", "Search",{ text: "Copy", tooltipText: "Copy", prefixIcon: "e-copy", id: "copy" }, "Search", { text: "Copy With Header", tooltipText: "Copy With Header", prefixIcon: "e-copy", id: "copyHeader" }, "ColumnChooser"];
	gridObj.refresh();
        }
        if (args.item.id === 'hideActions') {
            gridObj.toolbar = [{ text: "Show Actions", tooltipText: "Actions", prefixIcon: "e-custom-show-actions", id: "showActions" }, "Search", "ColumnChooser"];
            gridObj.showColumnChooser = true;
            gridObj.refresh();
        }
        if (args.item.id === 'toggleGrouping') {
            gridObj.allowGrouping = !gridObj.allowGrouping;
            gridObj.refresh();
        }
        if (args.item.id === 'toggleDetailed') {
            var visCount = 0;
            for (var i = 0; i < gridObj.columns.length; i++) {
                if (gridObj.columns[i].visible) visCount++;
            }
            if (visCount == gridObj.columns.length) {
                for (var i = 0; i < gridObj.columns.length; i++) {
                    var col = gridObj.columns[i];
                    if (typeof col.customAttributes != 'undefined' && typeof col.customAttributes.id != 'undefined' && col.customAttributes.id == 'detailed')
                        gridObj.showHider.hide(col.headerText, 'headerText');
                    else if(col.showInColumnChooser)
                        gridObj.showHider.show(col.headerText, 'headerText');
                }
            }
            else {
                for (var i = 0; i < gridObj.columns.length; i++) {
                    var col = gridObj.columns[i];
	    if(col.showInColumnChooser)
                         gridObj.showHider.show(col.headerText, 'headerText');
                }
            }
        }
    }
    function toolbarClickDependantPassports(args) {
        var gridObj = document.getElementById("DependantsPassportIdsGrid").ej2_instances[0];
        if (args.item.id === 'DependantsPhysicalIdsGrid_pdfexport') {
            gridObj.pdfExport();
        }
        if (args.item.id === 'DependantsPhysicalIdsGrid_excelexport') {
            gridObj.excelExport();
        }
        if (args.item.id === 'DependantsPhysicalIdsGrid_csvexport') {
            gridObj.csvExport();
        }
        if (this.getSelectedRecords().length > 0) {
            var withHeader = false;
            if (args.item.id === 'copyHeader') {
                withHeader = true;
            }
            this.copy(withHeader);
        } else {
            if (args.item.id === 'copyHeader') {
                var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
                dialogObj.show();
            }
            else if (args.item.id === 'copy') {
                var dialogObj = document.getElementById('alert_dialog_1').ej2_instances[0];
                dialogObj.show();
            }
        }
        if (args.item.id === 'showActions') {
            gridObj.toolbar = [{ text: "Hide Actions", tooltipText: "Actions", prefixIcon: "e-custom-hide-actions", id: "hideActions" }, { text: "Toggle Grouping", tooltipText: "Grouping", prefixIcon: "e-custom-group-toggle", id: "toggleGrouping" }, { text: "Toggle Detailed", tooltipText: "Toggle Detailed", prefixIcon: "e-toggledetailed", id: "toggleDetailed" }, { text: "ExcelExport", tooltipText: "Excel Export", prefixIcon: "e-excelexport", id: "excelexport", align: 'Right' }, "CsvExport", "Print", "Search",{ text: "Copy", tooltipText: "Copy", prefixIcon: "e-copy", id: "copy" }, "Search", { text: "Copy With Header", tooltipText: "Copy With Header", prefixIcon: "e-copy", id: "copyHeader" }, "ColumnChooser"];
	gridObj.refresh();
        }
        if (args.item.id === 'hideActions') {
            gridObj.toolbar = [{ text: "Show Actions", tooltipText: "Actions", prefixIcon: "e-custom-show-actions", id: "showActions" }, "Search", "ColumnChooser"];
            gridObj.showColumnChooser = true;
            gridObj.refresh();
        }
        if (args.item.id === 'toggleGrouping') {
            gridObj.allowGrouping = !gridObj.allowGrouping;
            gridObj.refresh();
        }
        if (args.item.id === 'toggleDetailed') {
            var visCount = 0;
            for (var i = 0; i < gridObj.columns.length; i++) {
                if (gridObj.columns[i].visible) visCount++;
            }
            if (visCount == gridObj.columns.length) {
                for (var i = 0; i < gridObj.columns.length; i++) {
                    var col = gridObj.columns[i];
                    if (typeof col.customAttributes != 'undefined' && typeof col.customAttributes.id != 'undefined' && col.customAttributes.id == 'detailed')
                        gridObj.showHider.hide(col.headerText, 'headerText');
                    else if(col.showInColumnChooser)
                        gridObj.showHider.show(col.headerText, 'headerText');
                }
            }
            else {
                for (var i = 0; i < gridObj.columns.length; i++) {
                    var col = gridObj.columns[i];
	    if(col.showInColumnChooser)
                         gridObj.showHider.show(col.headerText, 'headerText');
                }
            }
        }
    }

    function alertBtnClick() {
        var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
        var dialogObj1 = document.getElementById('alert_dialog_1').ej2_instances[0];
        dialogObj.hide();
        dialogObj1.hide();
    }
    var initial = true;
    function dataBound(args) {
        //this.autoFitColumns();
        //if (initial == true) {
        //    this.groupModule.collapseAll();
        //    initial = false;
        //}
        //console.log(args);
    }
    function actionCompleteDependant() {
        if ($("#DependantsGrid")[0].ej2_instances[0].dataSource.length == 0)
            $("#dependantsDocumentsSection").slideUp();
        else {
            $("#dependantsDocumentsSection").slideDown();

            var dependantsSelect = $("#dependantId");
            dependantsSelect.empty();
            dependantsSelect.append("<option value=''>Select Dependant</option>");
            $.each($("#DependantsGrid")[0].ej2_instances[0].dataSource, function (i, item) {
                dependantsSelect.append(`<option value="${item.Id}">${item.Name}</option>`);
            });
        }
    }
    function commandClick(args) {
        console.log(args);
        if (args.commandColumn.type == "Edit") {
            var params_ = JSON.stringify(args.rowData);  // display row data
            window.location = "@Url.Content("~")/GL/Edit?Id=" + args.rowData.Id;
            @*$.ajax({
                url: "/?handler=EditAccountkj&Guid_=" + params_.Id,
                async: true,
                type: "GET",
                data: "",
                success: function (data) {
                    console.log(data);
                    //window.location = "@Url.Content("~")/COA/Edit";
                },
                error: function (err) {
                    console.log(err);
                }
            })*@
        }
        else if (args.commandColumn.type == "Copy") {
            this.copy(false);
        }
    }
</script>