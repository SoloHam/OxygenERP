@using CERP.App;
@using Syncfusion.EJ2.Grids;
@using CERP.HR.EMPLOYEE.RougeDTOs;
@{
    List<DictionaryValue> degrees = (List<DictionaryValue>)ViewData["degrees"];
    List<DictionaryValue> institues = (List<DictionaryValue>)ViewData["institues"];

    bool isEditing = (bool)ViewData["IsEditing"] == true;
    QualificationDetail qualificationDetail = isEditing ? (QualificationDetail)Model.QualificationDetail : null;

    List<GridColumn> qualificationsColumns = (List<GridColumn>)ViewData["qualificationsColumns"];
    IList<Qualification> qualificationsDS = ((bool)ViewData["IsEditing"] == true) ? qualificationDetail.Qualifications : new List<Qualification>();
}

@section scripts{
}
<script>
    $(document).ready(function () {
    $('#addQualificationSectionBtn').on('click', function () {
            var isCollapsed = $('#form-step-4-2').css('display') == 'none';

            if (isCollapsed) {
                $('#addQualificationBtnSection').slideUp(200);
                $('#form-step-4-2').slideDown(200);
                setTimeout(function () { $('#addQualificationSectionBtn', '#addQualificationBtnSection').html('<i class="fa fa-arrow-up p-r-5"></i> Cancel Add') }, 200)
                $('#addQualificationBtnSection').slideDown(200);
            } else {
                $('#addQualificationBtnSection').slideUp(200);
                $('#form-step-4-2').slideUp(200);
                setTimeout(function () { $('#addQualificationSectionBtn', '#addQualificationBtnSection').html('<i class="fa fa-plus p-r-5"></i> Add Qualification') }, 200)
                $('#addQualificationBtnSection').slideDown(200);
            }
        });
    })
</script>

<div class="m-l-20 m-t-0">
    <h2>Qualification Details</h2>
    <p>
        Provide qualification details of the employee
    </p>
</div>
<hr class="m-b-0" />
<div class="panel-body" style="padding-bottom:0">
    <div class="col-lg-12 padding-right-0">

        <div id="addQualificationBtnSection" class="row">
            <div class="col-lg-12">
                <button id="addQualificationSectionBtn" type="button" class="btn btn-primary btn-block"><i class="fa fa-plus p-r-5"></i> Add Qualification</button>
            </div>
        </div>
        <div id="form-step-4-2" role="form" data-toggle="validator" style="display: none; margin-top:10px">
            <div class="row">
                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="margin-bottom-5  control-label">Degree / Certification:</label>
                        <select id="degreeId" name="DegreeId" class="form-control" required>
                            <option></option>
                            @for (int i = 0; i < degrees.Count; i++)
                            {
                                <option value="@degrees[i].Id" data-value="@degrees[i].Value">@degrees[i].Value</option>
                            }
                        </select>
                    </div>
                </div>


                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="form-group">
                        <label class="margin-bottom-5  control-label">Institution:</label>
                        <select id="institutionId" name="InstitutionId" class="form-control" required>
                            <option></option>
                            @for (int i = 0; i < institues.Count; i++)
                            {
                                <option value="@institues[i].Id" data-value="@institues[i].Value">@institues[i].Value</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5">From:</label>
                            <input type="text" id="fromDate" name="FromDate" @*value="@(empInfo!=null? empInfo.JOINING_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                        </div>
                    </div>
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5 pull-right ">Hijri Date</label>
                            <input type="text" id="fromHDate" name="FromHDate" @*value="@(empInfo!=null? empInfo.JOINING_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline   DatePickerHijri">
                        </div>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5">To:</label>
                            <input type="text" id="toDate" name="ToDate" @*value="@(empInfo!=null? empInfo.JOINING_DATE : "")"*@ style="width:100% !important" class="text-left form-control inline pull-left DatePicker" required>
                        </div>
                    </div>
                    <div class="col-sm-6" style="padding:0">
                        <div class="form-group">
                            <label class="control-label m-b-5 pull-right ">Hijri Date</label>
                            <input type="text" id="toHDate" name="ToHDate" @*value="@(empInfo!=null? empInfo.JOINING_DATE_H : "")"*@ style="width:100% !important" class="text-right  form-control inline   DatePickerHijri">
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-lg-12">
                    <button id="submitQualification" type="button" class="btn btn-primary btn-block">Add Qualification</button>
                </div>
            </div>
        </div>

        <div class="clearfix margin-5"></div>

        <div class="control-section m-t-20">
            <ejs-grid id="QualificationsGrid" dataSource="@qualificationsDS" enableAutoFill="true" columns="@qualificationsColumns"
                      dataBound="dataBound" commandClick="commandClick"
                      allowExcelExport="true" allowGrouping="true" height="100%"allowPdfExport="true"
                      hierarchyPrintMode="Expanded" allowSelection="true" allowFiltering="true"
                      allowSorting="true" allowMultiSorting="true" gridLines="Both"
                      toolbarClick="toolbarClick" toolbar="@(new List<object>() {"ExcelExport", "PdfExport", "CsvExport", "Print", "Search", "Delete", new { text = "Copy", tooltipText = "Copy", prefixIcon = "e-copy", id = "copy" }, new { text = "Copy With Header", tooltipText = "Copy With Header", prefixIcon = "e-copy", id = "copyHeader" } })"
                      
                      allowPaging="true" allowResizing="true">

                <e-grid-filterSettings type="CheckBox"></e-grid-filterSettings>
            <e-grid-editSettings showDeleteConfirmDialog="true" showConfirmDialog="true" allowAdding="true" allowDeleting="true" allowEditing="false"></e-grid-editSettings>
                <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
                <e-grid-pagesettings pageCount="5" pageSizes="@(new string[] { "5", "10" , "20", "All" })"></e-grid-pagesettings>
            </ejs-grid>
        </div>
    </div>
</div>

<script>

    function toolbarClick(args) {
        var gridObj = document.getElementById("QualificationsGrid").ej2_instances[0];
        if (args.item.id === 'Grid_pdfexport') {
            gridObj.pdfExport();
        }
        if (args.item.id === 'Grid_excelexport') {
            gridObj.excelExport();
        }
        if (args.item.id === 'Grid_csvexport') {
            gridObj.csvExport();
        }
        if (this.getSelectedRecords().length > 0) {
            var withHeader = false;
            if (args.item.id === 'copyHeader') {
                withHeader = true;
            }
            this.copy(withHeader);
        } else {
            if (args.item.id === 'copyHeader') {
                var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
                dialogObj.show();
            }
            else if (args.item.id === 'copy') {
                var dialogObj = document.getElementById('alert_dialog_1').ej2_instances[0];
                dialogObj.show();
            }
        }
    }
    function alertBtnClick() {
        var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
        var dialogObj1 = document.getElementById('alert_dialog_1').ej2_instances[0];
        dialogObj.hide();
        dialogObj1.hide();
    }
    var initial = true;
    function dataBound(args) {
        //this.autoFitColumns();
        //if (initial == true) {
        //    this.groupModule.collapseAll();
        //    initial = false;
        //}
        console.log(args);
    }

    function commandClick(args) {
        console.log(args);
        if (args.commandColumn.type == "Edit") {
            var params_ = JSON.stringify(args.rowData);  // display row data
            window.location = "@Url.Content("~")/GL/Edit?Id=" + args.rowData.Id;
            @*$.ajax({
                url: "/?handler=EditAccountkj&Guid_=" + params_.Id,
                async: true,
                type: "GET",
                data: "",
                success: function (data) {
                    console.log(data);
                    //window.location = "@Url.Content("~")/COA/Edit";
                },
                error: function (err) {
                    console.log(err);
                }
            })*@
        }
        else if (args.commandColumn.type == "Copy") {
            this.copy(false);
        }
    }
</script>